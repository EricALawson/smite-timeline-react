{"version":3,"sources":["data_objects/StatBlock.ts","data_objects/KillTiming.ts","redux/selectors/StatsSelector.ts","data_objects/God.ts","data_objects/Item.ts","data_objects/TestObjects.ts","redux/GodProvider.ts","redux/store.ts","data_objects/Build.ts","redux/reducers/GodReducer.ts","redux/reducers/itemReducer.ts","redux/reducers/KillTimingReducer.ts","redux/reducers/TimelineReducer.ts","redux/reducers/ItemPickerSlice.ts","components/GodStats/GodSelector.tsx","components/GodStats/GodStats.tsx","components/ItemBuild/AddItemButton/AddItemButton.tsx","components/ItemBuild/ItemSlot/ItemSlot.tsx","components/TimelineSlider/SliderEventGroup.tsx","components/TimelineSlider/SliderTooltip.tsx","components/TimelineSlider/TimelineSlider.tsx","components/ItemBuild/ItemPicker/ItemPicker.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["StatBlock","statMap","power","critChance","flatPenetration","percentPenetration","health","mana","hp5","mp5","moveSpeed","attackSpeed","physicalProtections","magicalProtections","lifesteal","cooldownReduction","crowdControlReduction","xpForLevel","minions","waveMelee","xp","gold","waveArcher","jungleBuffMinion","jungleBuffHolder","jungleHarpy","jungleElderHarpy","jungleAlphaHarpy","KillTiming","startingGold","waveStartTime","waveRespawnTime","jungleStartTime","jungleRespawnTime","goldPerSecond","selectItem","state","items","selectGod","god","selectKillTiming","killTiming","makeGodEventSelector","side","createSelector","levelTimes","time","level","times","length","push","getLevelTimes","levelEvents","map","index","stats","perLevelStats","type","slot","buildID","baseStats","makeItemEventSelector","itemCosts","prevCost","forEach","item","goldCost","itemTimes","goldTarget","getTimeForGold","itemEvents","i","makeEventSelector","godEvents","sort","a","b","makeStatsSelector","statEvents","stats1","stats2","summed","sum","event","summedEvent","Object","assign","God","name","image","toLowerCase","replace","Item","passive","EmptySlot","Ares","Cerberus","shoesOfFocus","itemImagePath","shoesOfTheMagi","itemName","GodProvider","gods","Map","this","set","instance","get","Array","from","keys","buildIdentifier","Build","godReducer","action","payload","setItemAt","removeItemAt","killTimingReducer","timeReducer","createReducer","setTime","itemPicker","createSlice","initialState","isOpen","reducers","closeItemPicker","openItemPicker","actions","buildSlice","leftBuild","left","rightBuild","right","buildSlices","rootReducer","combineReducers","reducer","store","configureStore","getInstance","mapDispatch","dispatch","pickGod","key","godNames","selectedGod","getGod","GodSelector","ConnectedComponent","connect","menu","onClick","aria-label","className","overlay","role","src","alt","GodStats","StatTable","selector","displayStat","ConnectedStatItem","build","events","val","filter","StatItem","props","toFixed","ownProps","buildItems","nextItemIndex","undefined","ItemSlot","Spacer","SliderEventGroup","SliderTooltip","value","seconds","h","Math","floor","m","s","round","Boolean","join","formatTime","leftEvents","rightEvents","timeRange","changeTime","createAction","marks","timeMap","concat","otherEvents","eventList","label","defaultValue","min","max","step","vertical","reverse","onChange","tooltipVisible","tooltipPlacement","tipFormatter","isSelectorOpen","closeSelector","open","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd819e21.chunk.js","sourcesContent":["\r\nexport interface StatBlock {\r\n    power: number;\r\n    critChance: number;\r\n    flatPenetration: number;\r\n    percentPenetration: number;\r\n    health: number;\r\n    mana: number;\r\n    hp5: number;\r\n    mp5: number;\r\n    moveSpeed: number;\r\n    attackSpeed: number;\r\n    physicalProtections: number;\r\n    magicalProtections: number;\r\n    lifesteal: number;\r\n    cooldownReduction: number;\r\n    crowdControlReduction: number;\r\n}\r\n\r\nexport function StatBlock(statMap: any): StatBlock {\r\n    return {\r\n        power: statMap.power ? statMap.power : 0,\r\n        critChance: statMap.critChance ? statMap.critChance : 0,\r\n        flatPenetration: statMap.flatPenetration ? statMap.flatPenetration : 0,\r\n        percentPenetration: statMap.percentPenetration ? statMap.percentPenetration : 0,\r\n        health: statMap.health ? statMap.health : 0,\r\n        mana: statMap.mana ? statMap.mana : 0,\r\n        hp5: statMap.hp5 ? statMap.hp5 : 0,\r\n        mp5: statMap.mp5 ? statMap.mp5 : 0,\r\n        moveSpeed: statMap.moveSpeed ? statMap.moveSpeed : 0,\r\n        attackSpeed: statMap.attackSpeed ? statMap.attackSpeed : 0,\r\n        physicalProtections: statMap.physicalProtections ? statMap.physicalProtections : 0,\r\n        magicalProtections: statMap.magicalProtections ? statMap.magicalProtections : 0,\r\n        lifesteal: statMap.lifesteal ? statMap.lifesteal : 0,\r\n        cooldownReduction: statMap.cooldownReduction ? statMap.cooldownReduction : 0,\r\n        crowdControlReduction: statMap.crowdControlReduction ? statMap.crowdControlReduction : 0\r\n    }\r\n}\r\n\r\nexport function add(stats1: StatBlock, stats2: StatBlock): StatBlock {\r\n    return {\r\n        power: stats1.power + stats2.power,\r\n        critChance: stats1.critChance + stats2.critChance,\r\n        flatPenetration: stats1.flatPenetration + stats2.flatPenetration,\r\n        percentPenetration: stats1.percentPenetration + stats2.percentPenetration,\r\n        health: stats1.health + stats2.health,\r\n        mana: stats1.mana + stats2.mana,\r\n        hp5: stats1.hp5 + stats2.hp5,\r\n        mp5: stats1.mp5 + stats2.mp5,\r\n        moveSpeed: stats1.moveSpeed + stats2.moveSpeed,\r\n        attackSpeed: stats1.attackSpeed + stats2.attackSpeed,\r\n        physicalProtections: stats1.physicalProtections + stats2.physicalProtections,\r\n        magicalProtections: stats1.magicalProtections + stats2.magicalProtections,\r\n        lifesteal: stats1.lifesteal + stats2.lifesteal,\r\n        cooldownReduction: stats1.cooldownReduction + stats2.cooldownReduction,\r\n        crowdControlReduction: stats1.crowdControlReduction + stats2.crowdControlReduction\r\n    }\r\n}\r\n\r\n\r\nexport default StatBlock;","\r\n\r\nexport interface KillTiming {\r\n    startingGold: number;\r\n    waveStartTime: number;\r\n    waveRespawnTime: number;\r\n    jungleStartTime: number;\r\n    jungleRespawnTime: number;\r\n    goldPerSecond: number;\r\n}\r\n\r\nexport function KillTiming(): KillTiming {\r\n    return {\r\n        startingGold: 1500,\r\n        waveStartTime: 30,\r\n        waveRespawnTime: 30,\r\n        jungleStartTime: 30,\r\n        jungleRespawnTime: 120,\r\n        goldPerSecond: 3\r\n    }\r\n}\r\n    \r\nexport function getLevelTimes(killTiming: KillTiming): number[] {\r\n    let time = 0;\r\n    let xp = 0;\r\n    let level = 0; //don't bother adjusting for array indexing until we display the level.\r\n    var times = [];\r\n    while(times.length < 20) {\r\n        if(xp >= xpForLevel[level]) {\r\n            times.push(time);\r\n            level++;\r\n        }\r\n\r\n        time++;\r\n\r\n        if((time - killTiming.waveStartTime) % killTiming.waveRespawnTime === 0) {\r\n            xp += minions.waveMelee.xp * 3 + minions.waveArcher.xp * 3;\r\n        }\r\n\r\n        if((time - killTiming.jungleStartTime) % killTiming.jungleRespawnTime === 0) {\r\n            xp += minions.jungleBuffMinion.xp * 2 + minions.jungleBuffHolder.xp;\r\n        }\r\n    }\r\n    return times;\r\n}\r\n\r\nexport function getTimeForGold(killTiming: KillTiming, goldTarget: number): number {\r\n    let gold = killTiming.startingGold;\r\n    let time = 0;\r\n    while (gold < goldTarget) {\r\n        time++;\r\n\r\n        gold += killTiming.goldPerSecond;\r\n\r\n        if((time - killTiming.waveStartTime) % killTiming.waveRespawnTime === 0) {\r\n            gold += minions.waveMelee.gold * 3 + minions.waveArcher.gold * 3;\r\n        }\r\n\r\n        if((time - killTiming.jungleStartTime) % killTiming.jungleRespawnTime === 0) {\r\n            gold += minions.jungleBuffMinion.gold * 2 + minions.jungleBuffHolder.gold;\r\n        }\r\n        //console.log(\"time: \" + time + \" gold: \" + gold);\r\n    }\r\n    return time;\r\n}\r\n\r\nexport function getTimeForKills(killTiming: KillTiming, killTarget: number) {\r\n    let time = 0;\r\n    let kills = 0;\r\n    while (kills < killTarget) {\r\n        if((time - killTiming.waveStartTime) % killTiming.waveRespawnTime === 0) {\r\n            kills += 6;\r\n        }\r\n\r\n        if((time - killTiming.jungleStartTime) % killTiming.jungleRespawnTime === 0) {\r\n            kills += 3;\r\n        }\r\n    }\r\n\r\n    return time;\r\n}\r\n\r\n\r\nconst xpForLevel = [\r\n    0,\r\n    308,\r\n    671,\r\n    1089,\r\n    1562,\r\n    2090,\r\n    2673,\r\n    3311,\r\n    4004,\r\n    4752,\r\n    5555,\r\n    6413,\r\n    7326,\r\n    8294,\r\n    9317,\r\n    10395,\r\n    11528,\r\n    12716,\r\n    13959,\r\n    15257\r\n]\r\n\r\nconst minions = {\r\n\r\n    waveMelee: {\r\n        xp: 45,\r\n        gold: 25\r\n    },\r\n    waveArcher : {\r\n        xp: 25,\r\n        gold: 18\r\n    },\r\n    jungleBuffMinion : {\r\n        xp: 16,\r\n        gold: 20\r\n    },\r\n    jungleBuffHolder : {\r\n        xp: 116,\r\n        gold: 48\r\n    },\r\n    jungleHarpy : {\r\n        xp: 22,\r\n        gold: 22\r\n    },\r\n    jungleElderHarpy: {\r\n        xp: 30,\r\n        gold: 34\r\n    },\r\n    jungleAlphaHarpy: {\r\n        xp: 35,\r\n        gold: 50\r\n    }\r\n}\r\n\r\nexport default KillTiming;","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport StatBlock, { add } from \"../../data_objects/StatBlock\";\r\nimport Item from \"../../data_objects/Item\";\r\nimport God from \"../../data_objects/God\";\r\nimport KillTiming, { getTimeForGold, getLevelTimes } from \"../../data_objects/KillTiming\";\r\nimport Build from \"../../data_objects/Build\";\r\nimport { buildIdentifier } from \"../store\";\r\nimport { Slot } from \"../reducers/ItemPickerSlice\";\r\n\r\nexport type BuildEvent = ItemEvent | LevelEvent\r\n\r\nexport interface ItemEvent {\r\n    type: 'item finished',\r\n    time: number,\r\n    stats: StatBlock,\r\n    item: Item,\r\n    slot: Slot\r\n}\r\n\r\nexport interface LevelEvent {\r\n    type: 'level',\r\n    time: number,\r\n    stats: StatBlock,\r\n    level: number,\r\n    slot: Slot\r\n}\r\n\r\n\r\nconst selectItem = (state: Build) => state.items;\r\nconst selectGod = (state: Build) => state.god;\r\nconst selectKillTiming = (state: Build) => state.killTiming;\r\n\r\nconst makeGodEventSelector = (side: buildIdentifier) => {\r\n    return createSelector( \r\n        [selectGod, selectKillTiming],\r\n        (god: God, killTiming: KillTiming) => {\r\n            let levelTimes: number[] = getLevelTimes(killTiming);\r\n            let levelEvents: LevelEvent[] = []\r\n            levelEvents.push( ...levelTimes.map( (time, index) => ({\r\n                time: time,\r\n                stats: god.perLevelStats,\r\n                type: 'level' as const,\r\n                level: index + 1,\r\n                slot: {buildID: side, index: index + 1}\r\n\r\n            })));\r\n\r\n            levelEvents[0].stats = god.baseStats;\r\n\r\n            return levelEvents;\r\n        }\r\n    );\r\n}\r\n\r\nexport {makeGodEventSelector};\r\n\r\nconst makeItemEventSelector = (side: buildIdentifier) => {\r\n    return createSelector( \r\n        [selectItem, selectKillTiming],\r\n        (items: Item[], killTiming: KillTiming) => {\r\n            let itemCosts: number[] = []; //this is the cumulative total spent when this item is built.\r\n            let prevCost = 0;\r\n            items.forEach((item: Item ) => {\r\n                itemCosts.push(item.goldCost + prevCost);\r\n                prevCost += item.goldCost;\r\n            });\r\n            let itemTimes: number[] = itemCosts.map(gold => getTimeForGold(killTiming, gold));\r\n            let itemEvents: ItemEvent[] = [];\r\n            for (let i = 0; i < itemTimes.length; i++) {\r\n                itemEvents.push({\r\n                    time: itemTimes[i],\r\n                    stats: items[i].stats,\r\n                    type: 'item finished',\r\n                    item: items[i],\r\n                    slot: {buildID: side, index: i}\r\n                });\r\n        }\r\n        return itemEvents;\r\n    });\r\n}\r\nexport {makeItemEventSelector};\r\n\r\nconst makeEventSelector = (side: buildIdentifier) => {\r\n    return createSelector(\r\n        [makeGodEventSelector(side), makeItemEventSelector(side)],\r\n        (godEvents, itemEvents, ) => {\r\n            var events: BuildEvent[] = [...godEvents, ...itemEvents];\r\n            \r\n            return events.sort((a:BuildEvent, b: BuildEvent) => (a.time > b.time) ? 1: -1);\r\n        }\r\n    );\r\n}\r\n\r\nconst makeStatsSelector = (side: buildIdentifier) => {\r\n    return createSelector(\r\n        [makeEventSelector(side)],\r\n        (statEvents) => {\r\n            let summed: BuildEvent[] = [];\r\n            let sum = StatBlock({});\r\n            for (let event of statEvents) {\r\n                sum = add(sum, event.stats);\r\n                let summedEvent = Object.assign({}, event);\r\n                summedEvent.stats = Object.assign({}, sum);\r\n                summed.push(summedEvent)\r\n            }\r\n            return summed;\r\n        }\r\n    )\r\n}\r\n\r\nexport default makeStatsSelector;\r\n\r\n","import StatBlock from \"./StatBlock\";\r\n\r\ninterface God {\r\n    name: string;\r\n    baseStats: StatBlock;\r\n    perLevelStats: StatBlock;\r\n    image: string;\r\n}\r\n\r\nconst God = (\r\n    name: string = \"No god selected\",\r\n    baseStats: StatBlock = StatBlock({}),\r\n    perLevelStats: StatBlock = StatBlock({})\r\n): God => {\r\n    return {\r\n        name: name,\r\n        baseStats: baseStats,\r\n        perLevelStats: perLevelStats,\r\n        //image: process.env.PUBLIC_URL + '/images/god_cards/' + name + '.jpg'\r\n        image: \"https://web2.hirez.com/smite/god-cards/\" + name.toLowerCase().replace(/\\s/g, \"-\") + \".jpg\"\r\n    }\r\n}\r\n\r\nexport default God;","import StatBlock from \"./StatBlock\";\r\n\r\ninterface Item {\r\n    goldCost: number;\r\n    name: string;\r\n    stats: StatBlock;\r\n    image: string;\r\n    passive: any; //TODO make item passives\r\n}\r\n\r\nconst Item = (\r\n    name = \"\", \r\n    goldCost = 0, \r\n    stats = StatBlock({}), \r\n    passive = null\r\n    ): Item => {\r\n        return {\r\n            name: name,\r\n            goldCost: goldCost,\r\n            stats: stats,\r\n            passive: passive,\r\n            //image: process.env.PUBLIC_URL + '/images/items/' + name + '.jpg'\r\n            image: \"https://web2.hirez.com/smite/item-icons/\" + name.toLowerCase().replace(/\\s/g, \"-\") + \".jpg\"\r\n        } as Item\r\n    }\r\n\r\nexport default Item;\r\n\r\nconst EmptySlot = Item('Empty Slot');\r\n\r\nexport {EmptySlot};","import God from \"./God\";\r\nimport StatBlock from \"./StatBlock\";\r\nimport Item from \"./Item\";\r\n\r\nconst Ares = God(\r\n    'Ares',\r\n    StatBlock({ //base stats\r\n        health: 485,\r\n        mana: 200,\r\n        hp5: 8,\r\n        mp5: 4.6,\r\n        physicalProtections: 20,\r\n        magicalProtections: 30\r\n    }),\r\n    StatBlock({ //per level stats\r\n        health: 90,\r\n        mana: 37,\r\n        hp5: 0.67,\r\n        mp5: 0.42,\r\n        physicalProtections: 3,\r\n        magicalProtections: 0.9\r\n    })\r\n);\r\n\r\nexport {Ares};\r\n\r\nconst Cerberus = God(\r\n    'Cerberus',\r\n    StatBlock({ //base stats\r\n        health: 490,\r\n        mana: 200,\r\n        hp5: 7,\r\n        mp5: 4.6,\r\n        physicalProtections: 19,\r\n        magicalProtections: 30\r\n    }),\r\n    StatBlock({ //per level stats\r\n        health: 95,\r\n        mana: 35,\r\n        hp5: 0.75,\r\n        mp5: 0.4,\r\n        physicalProtections: 3,\r\n        magicalProtections: 0.9\r\n    })\r\n);\r\n\r\nexport {Cerberus};\r\n\r\nlet shoesOfFocus = Item();\r\nshoesOfFocus.goldCost = 1600;\r\nshoesOfFocus.name = \"Shoes of Focus\";\r\nshoesOfFocus.stats = StatBlock({\r\n    mana: 250,\r\n    power: 55,\r\n    cooldownReduction: 0.10,\r\n    moveSpeed: 0.18\r\n});\r\n//shoesOfFocus.image = process.env.PUBLIC_URL + '/images/items/' + shoesOfFocus.name + '.jpg';\r\nshoesOfFocus.image = itemImagePath(shoesOfFocus.name)\r\n\r\nexport {shoesOfFocus};\r\n\r\nlet shoesOfTheMagi = Item();\r\nshoesOfTheMagi.goldCost = 1550;\r\nshoesOfTheMagi.name = \"Shoes of The Magi\";\r\nshoesOfTheMagi.stats = StatBlock({\r\n    power: 75,\r\n    mana: 100,\r\n    lifesteal: 0.08,\r\n    moveSpeed: 0.18\r\n});\r\n//shoesOfTheMagi.image = process.env.PUBLIC_URL + '/images/items/' + shoesOfTheMagi.name + '.jpg';\r\nshoesOfTheMagi.image = itemImagePath(shoesOfTheMagi.name)\r\n\r\nexport {shoesOfTheMagi};\r\n\r\nfunction itemImagePath(itemName: string): string {\r\n    return \"https://web2.hirez.com/smite/item-icons/\" + itemName.toLowerCase().replace(/\\s/g, \"-\") + \".jpg\";\r\n}","import God from \"../data_objects/God\";\r\nimport { Ares, Cerberus } from \"../data_objects/TestObjects\";\r\n\r\nclass GodProvider {\r\n    //Singleton boilerplate\r\n    private static instance: GodProvider;\r\n\r\n    static getInstance(): GodProvider {\r\n        if (!GodProvider.instance) {\r\n            GodProvider.instance = new GodProvider();\r\n        }\r\n        return GodProvider.instance;\r\n    }\r\n\r\n    //class code\r\n    private gods = new Map<string, God>();\r\n\r\n    private constructor() {\r\n        this.gods.set('Ares', Ares);\r\n        this.gods.set('Cerberus', Cerberus)\r\n    }\r\n\r\n    get godNames(): string[] {\r\n        return Array.from(this.gods.keys());\r\n    }\r\n\r\n    getGod(name: string): God|undefined {\r\n        return this.gods.get(name);\r\n    }\r\n}\r\n\r\nexport default GodProvider;","\r\nimport {configureStore, createSlice, combineReducers} from '@reduxjs/toolkit';\r\nimport godReducer from './reducers/GodReducer';\r\nimport {setItemAt, removeItemAt} from './reducers/itemReducer';\r\nimport killTimingReducer from './reducers/KillTimingReducer';\r\nimport Build from '../data_objects/Build';\r\nimport {timeReducer} from './reducers/TimelineReducer';\r\nimport { Ares } from '../data_objects/TestObjects';\r\nimport itemPicker from './reducers/ItemPickerSlice';\r\n\r\nenum buildIdentifier {\r\n    left = 'left',\r\n    right = 'right'\r\n}\r\n\r\nexport {buildIdentifier};\r\n\r\nconst buildSlice = (name: buildIdentifier) => {\r\n    return createSlice({\r\n        name: name,\r\n        initialState: Build(Ares),\r\n        reducers: {\r\n            godReducer,\r\n            setItemAt,\r\n            removeItemAt,\r\n            killTimingReducer\r\n        }\r\n    })\r\n}\r\n\r\nconst leftBuild = buildSlice(buildIdentifier.left);\r\nconst rightBuild = buildSlice(buildIdentifier.right);\r\n\r\nconst buildSlices = {\r\n    left: leftBuild,\r\n    right: rightBuild\r\n}\r\n\r\nexport {buildSlices};\r\n\r\nconst rootReducer = combineReducers({\r\n    left: leftBuild.reducer,\r\n    right: rightBuild.reducer,\r\n    time: timeReducer,\r\n    itemPicker: itemPicker.reducer\r\n});\r\n\r\nexport {rootReducer}\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer\r\n});\r\n\r\ntype RootState = ReturnType<typeof rootReducer>;\r\nexport type { RootState };\r\n\r\nexport default store;","import God from \"./God\";\r\nimport Item, {EmptySlot} from \"./Item\";\r\nimport KillTiming from \"./KillTiming\";\r\nimport {shoesOfFocus, shoesOfTheMagi} from './TestObjects';\r\n\r\ninterface Build {\r\n    god: God;\r\n    items: Item[];\r\n    killTiming: KillTiming;\r\n}\r\n\r\nconst Build = (\r\n        god:God = God(), \r\n        items: Item[] = [shoesOfFocus, shoesOfTheMagi],\r\n        killTiming = KillTiming()\r\n    ): Build => {\r\n        return {god: god, items: items, killTiming: killTiming}\r\n    }\r\n\r\nexport default Build;","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport God from '../../data_objects/God';\r\nimport Build from '../../data_objects/Build';\r\n\r\n\r\nconst godReducer = (state: Build, action: PayloadAction<God>) => {\r\n    return Build(\r\n        action.payload,\r\n        state.items,\r\n        state.killTiming\r\n    )\r\n};\r\n\r\nexport default godReducer;","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport Item, { EmptySlot } from '../../data_objects/Item';\r\nimport Build from '../../data_objects/Build';\r\n\r\ntype SetItemPayload = {\r\n    index: number,\r\n    item: Item\r\n}\r\n\r\nconst setItemAt = (state: Build, action: PayloadAction<SetItemPayload>) => {\r\n    let items = [...state.items];\r\n    items[action.payload.index] = action.payload.item;\r\n    return Build(\r\n        state.god,\r\n        items,\r\n        state.killTiming\r\n    )\r\n};\r\n\r\nconst removeItemAt = (state: Build, action: PayloadAction<number>) => {\r\n    let items = [...state.items];\r\n    items[action.payload] = EmptySlot;\r\n    return Build(\r\n        state.god,\r\n        items,\r\n        state.killTiming\r\n    )\r\n}\r\n\r\nexport {setItemAt, removeItemAt};","import KillTiming from \"../../data_objects/KillTiming\";\r\nimport Build from \"../../data_objects/Build\";\r\n\r\nconst killTimingReducer = (state: Build, action: any) => {\r\n    KillTiming();\r\n}\r\n\r\nexport default killTimingReducer;","import { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nconst timeReducer = createReducer(0, {\r\n    setTime: (state: number, action: PayloadAction<number>) => {\r\n        return action.payload;\r\n    }\r\n});\r\n\r\n\r\nexport {timeReducer};","import { createSlice, Action, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { buildIdentifier } from \"../store\";\r\n\r\ntype Slot = {\r\n    buildID: buildIdentifier,\r\n    index: number\r\n}\r\n\r\nexport type {Slot};\r\n\r\ntype ItemPickerState = {\r\n    isOpen: boolean,\r\n    slot: Slot\r\n}\r\n\r\nconst itemPicker = createSlice({\r\n    name: 'itemPicker',\r\n    initialState: {\r\n        isOpen: false,\r\n        slot: {\r\n            buildID: 'left',\r\n            index: 0\r\n        }\r\n    },\r\n    reducers: {\r\n        closeItemPicker: (state, action: Action) => {\r\n            return {\r\n                isOpen: false,\r\n                slot: state.slot\r\n            }\r\n        },\r\n        openItemPicker: (state, action: PayloadAction<Slot>) => {\r\n            return {\r\n                isOpen: true,\r\n                slot: {\r\n                    buildID: action.payload.buildID,\r\n                    index: action.payload.index\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nconst closeItemPicker = itemPicker.actions.closeItemPicker;\r\nconst openItemPicker = itemPicker.actions.openItemPicker;\r\n\r\nexport {closeItemPicker, openItemPicker};\r\n\r\nexport default itemPicker;","import React from 'react'\r\nimport GodProvider from '../../redux/GodProvider'\r\nimport { buildIdentifier} from '../../redux/store'\r\nimport { Dropdown, Menu, Button } from 'antd'\r\nimport MenuItem from 'antd/lib/menu/MenuItem'\r\nimport { connect } from 'react-redux'\r\n\r\ntype Props = { buildIdentifier: buildIdentifier }\r\n\r\ntype DispatchProp = { pickGod: (key: number, buildIdentifier: buildIdentifier) => void }\r\n\r\ntype stateProp = { image: string }\r\n\r\nconst gods = GodProvider.getInstance();\r\n\r\nconst mapDispatch = (dispatch: any) => {\r\n    return {\r\n        pickGod: (key: number, buildIdentifier: buildIdentifier) => {\r\n            \r\n            const name = gods.godNames[key];\r\n            const selectedGod = gods.getGod(name);\r\n            if (selectedGod) {\r\n                const action = {\r\n                    type: buildIdentifier + '/godReducer',\r\n                    payload: selectedGod\r\n                }\r\n                dispatch(action);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst GodSelector = ({buildIdentifier}: Props) => {\r\n    const mapStateToProps = (state: any) => {\r\n        return {image: state[buildIdentifier].god.image}\r\n    }\r\n    \r\n    const component = ({image, pickGod}: stateProp & DispatchProp) => {\r\n        const onClick = ({key}: any) => pickGod(key, buildIdentifier)\r\n        const menu =  <Menu onClick={onClick}>\r\n            {gods.godNames.map((name: string, index: number) => <MenuItem key={index} aria-label={'select '+ name + ' ' + buildIdentifier}>{name}</MenuItem>)}\r\n        </Menu>\r\n        \r\n        return (<div className=\"godSelection\">\r\n            <Dropdown overlay={menu}>\r\n                <Button className='god-selection-menu' role='menu' aria-label='left god selection dropdown'>Select God</Button>\r\n            </Dropdown>\r\n            <img src={image} alt='the selected god' aria-label={'god image ' + buildIdentifier} ></img>\r\n        </div>)\r\n    }\r\n\r\n    const ConnectedComponent = connect(mapStateToProps, mapDispatch)(component);\r\n    return <ConnectedComponent></ConnectedComponent>\r\n}\r\n\r\nexport default GodSelector;","import React from 'react';\r\nimport './GodStats.css';\r\nimport { connect } from 'react-redux';\r\nimport makeStatsSelector from '../../redux/selectors/StatsSelector';\r\nimport Build from '../../data_objects/Build';\r\nimport StatBlock from '../../data_objects/StatBlock';\r\nimport GodSelector from './GodSelector';\r\nimport { buildIdentifier, RootState } from '../../redux/store';\r\n\r\ntype BuildID = {\r\n    buildIdentifier: buildIdentifier\r\n}\r\ntype NameValPair = {\r\n    name: keyof StatBlock,\r\n    val: number\r\n}\r\n\r\nconst GodStats = ({buildIdentifier}: BuildID) => {\r\n    return(\r\n        <div className='GodStats border-gradient'>\r\n            <div className=\" major-container\">\r\n                <GodSelector buildIdentifier={buildIdentifier}></GodSelector>\r\n                <StatTable buildIdentifier={buildIdentifier}></StatTable>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GodStats;\r\n\r\nvar statsSelector: ReturnType<typeof makeStatsSelector> | null = null;\r\nconst StatTable = ({buildIdentifier}: BuildID) => {\r\n        const selector = statsSelector ?? makeStatsSelector(buildIdentifier)\r\n        const displayStat = (name: keyof StatBlock) => {\r\n        const mapStateToProps = (state: RootState) => {\r\n            let build: Build = state[buildIdentifier];\r\n            let events = selector(build);\r\n            events = events.filter(event => event.time <= state.time);\r\n            let stats = events[events.length - 1].stats; //the last event whose time is <= current time\r\n            let val = stats[name]\r\n            if (typeof val == 'number') {\r\n                return {\r\n                    name: name,\r\n                    val: val\r\n                }\r\n            }\r\n        }\r\n        \r\n        const ConnectedStatItem = connect(mapStateToProps)(StatItem);\r\n        return (\r\n            <ConnectedStatItem></ConnectedStatItem>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <table><tbody>\r\n                {displayStat('health')}\r\n                {displayStat('mana')}\r\n                {displayStat('hp5')}\r\n                {displayStat('mp5')}\r\n                {displayStat('power')}\r\n                {displayStat('critChance')}\r\n                {displayStat('flatPenetration')}\r\n                {displayStat('percentPenetration')}\r\n                {displayStat('attackSpeed')}\r\n                {displayStat('physicalProtections')}\r\n                {displayStat('magicalProtections')}\r\n                {displayStat('moveSpeed')}\r\n                {displayStat('cooldownReduction')}\r\n                {displayStat('crowdControlReduction')}\r\n        </tbody></table>\r\n    );\r\n}\r\n\r\nconst StatItem = (props: NameValPair) => {\r\n    return(\r\n        <tr>\r\n            <td className='stat-name'>\r\n                {props.name}:\r\n            </td>\r\n            <td className='stat-value'>\r\n              {props.val.toFixed(0)}  \r\n            </td>\r\n        </tr>\r\n    )\r\n}","import React from 'react';\r\nimport { EmptySlot } from '../../../data_objects/Item';\r\nimport { Slot } from '../../../redux/reducers/ItemPickerSlice';\r\nimport { connect } from 'react-redux';\r\nimport { buildIdentifier, RootState } from '../../../redux/store';\r\n\r\ntype Props = {\r\n    side: buildIdentifier\r\n}\r\ntype DispatchProp = ReturnType<typeof mapDispatch>\r\n\r\nconst mapDispatch = (dispatch: any) => { \r\n    return {\r\n        openItemPicker: (slot: Slot) => { \r\n            const action = {\r\n                type: 'itemPicker/openItemPicker',\r\n                payload: slot\r\n            }\r\n            dispatch(action) \r\n        } \r\n    }\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapState>\r\nconst mapState = (state: RootState, ownProps: Props) => {\r\n    let buildItems = state[ownProps.side].items;\r\n    let index = 0;\r\n    for (index = buildItems.length - 1; index >= 0; index--) {\r\n        if (buildItems[index] !== EmptySlot) break;\r\n    }\r\n    index++;\r\n    return { nextItemIndex: index}\r\n\r\n}\r\n\r\nconst AddItemButton = ({ side, openItemPicker, nextItemIndex }: Props & DispatchProp & StateProps) =>  {\r\n    const open = () => openItemPicker({buildID: side, index: nextItemIndex})\r\n    return (<img \r\n                    className={'item-slot ' + side }\r\n                    src={undefined} \r\n                    alt={'Add an item to ' + side + ' build'}\r\n                    onClick={open} \r\n                    role='button'\r\n                    aria-label='item slot'></img>\r\n            )\r\n}\r\n\r\n\r\n\r\nexport default connect(mapState, mapDispatch)(AddItemButton);;","import React from 'react';\r\nimport './ItemSlot.css';\r\nimport Item from '../../../data_objects/Item';\r\nimport { Slot } from '../../../redux/reducers/ItemPickerSlice';\r\nimport { connect } from 'react-redux';\r\n\r\ntype SlotProps = {\r\n    item: Item,\r\n    slot: Slot\r\n}\r\ntype DispatchProp = ReturnType<typeof mapDispatch>\r\n\r\nconst mapDispatch = (dispatch: any) => { \r\n    return {\r\n        openItemPicker: (slot: Slot) => { \r\n            const action = {\r\n                type: 'itemPicker/openItemPicker',\r\n                payload: slot\r\n            }\r\n            dispatch(action) \r\n        } \r\n    }\r\n};\r\n\r\nconst ItemSlot = ({ item, slot}: SlotProps) => {\r\n\r\n    const component = ({openItemPicker}: DispatchProp) =>  {\r\n        const open = () => openItemPicker(slot)\r\n        return (\r\n            <img \r\n                className={'item-slot'} \r\n                src={item.image} \r\n                alt='selected item' \r\n                onClick={open} \r\n                role='button'\r\n                aria-label='item slot'></img>\r\n        )\r\n};\r\n    const ConnectedComponent = connect(null, mapDispatch)(component);\r\n    return <ConnectedComponent></ConnectedComponent>\r\n}\r\n\r\n\r\n\r\nexport default ItemSlot;","import { BuildEvent } from \"../../redux/selectors/StatsSelector\";\r\nimport React from \"react\";\r\nimport ItemSlot from \"../ItemBuild/ItemSlot/ItemSlot\";\r\nimport \"./SliderEventGroup.css\";\r\n\r\ntype Props = {\r\n    events: BuildEvent[]\r\n}\r\nconst Spacer = () => <div className='level-spacer'></div>\r\n\r\n\r\nconst SliderEventGroup = ({ events}: Props) => {\r\n    return (<div className={'event-group'}>\r\n        <div className='left event-group-side'>\r\n        {\r\n            events.filter(event => event.type === 'level').length > 0\r\n                ? null\r\n                : <Spacer></Spacer>\r\n        }\r\n        {\r\n            events.filter( event => event.slot.buildID === 'left')\r\n                .map( (event): JSX.Element => {\r\n                    switch (event.type) {\r\n                        case 'item finished': return <ItemSlot item={event.item} slot={event.slot}></ItemSlot>\r\n                        case 'level': return <div className={'level-event'}>{event.level}</div>\r\n                    }\r\n            })\r\n        }</div>\r\n        <div className='right event-group-side'>\r\n        {\r\n            events.filter(event => event.type === 'level').length > 0\r\n                ? null\r\n                : <Spacer></Spacer>\r\n        }\r\n        {\r\n            events.filter( event => event.slot.buildID === 'right')\r\n                .map( (event): JSX.Element => {\r\n                    switch (event.type) {\r\n                        case 'item finished': return <ItemSlot item={event.item} slot={event.slot}></ItemSlot>\r\n                        case 'level': return <div className={'level-event'}>{event.level}</div>\r\n                    }\r\n            })\r\n        }\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default SliderEventGroup;","import React from \"react\";\r\n\r\nfunction formatTime(seconds: number) {\r\n    const h = Math.floor(seconds / 3600);\r\n    const m = Math.floor((seconds % 3600) / 60);\r\n    const s = Math.round(seconds % 60);\r\n    return [\r\n      h,\r\n      m > 9 ? m : (h ? '0' + m : m || '0'),\r\n      s > 9 ? s : '0' + s\r\n    ].filter(Boolean).join(':');\r\n  }\r\n\r\nconst SliderTooltip = (value: number) => {\r\n    return <div className='time-tooltip'>\r\n        {formatTime(value)}\r\n    </div>\r\n}\r\n\r\nexport default SliderTooltip;","import React from 'react';\r\nimport './TimelineSlider.css';\r\nimport { connect } from 'react-redux';\r\nimport {Slider} from 'antd';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { SliderValue, SliderMarks } from 'antd/lib/slider';\r\nimport { buildIdentifier, RootState } from '../../redux/store';\r\nimport makeStatsSelector, { BuildEvent, ItemEvent } from '../../redux/selectors/StatsSelector';\r\nimport { EmptySlot } from '../../data_objects/Item';\r\nimport AddItemButton from '../ItemBuild/AddItemButton/AddItemButton';\r\nimport SliderEventGroup from './SliderEventGroup';\r\nimport SliderTooltip from './SliderTooltip';\r\n\r\n\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        changeTime: (value: SliderValue) => {\r\n            if (typeof value === 'number') {\r\n                dispatch( createAction<number>('setTime')(value) );\r\n            }\r\n        }\r\n    }  \r\n}\r\n\r\ntype StateProps = ReturnType<typeof mapState>\r\nconst mapState = (state: RootState) => {\r\n    const leftEvents = makeStatsSelector(buildIdentifier.left)(state.left);\r\n    const rightEvents = makeStatsSelector(buildIdentifier.right)(state.right);\r\n    const timeRange = leftEvents[leftEvents.length -1] > rightEvents[rightEvents.length -1]\r\n                        ? leftEvents[leftEvents.length -1].time\r\n                        : rightEvents[rightEvents.length -1].time;\r\n    return {\r\n        leftEvents: leftEvents,\r\n        rightEvents: rightEvents,\r\n        timeRange: timeRange\r\n    }\r\n}\r\n\r\nconst Spacer = () => <div className='level-spacer'></div>\r\n\r\nfunction TimelineSlider({changeTime, leftEvents, rightEvents, timeRange}: DispatchProps & StateProps) {\r\n    const marks: SliderMarks = {};\r\n    const timeMap: Map<number, BuildEvent[]> = new Map();\r\n    leftEvents.concat(rightEvents).forEach((event: BuildEvent) => {\r\n        const otherEvents = timeMap.get(event.time);\r\n        if( !otherEvents) {\r\n            timeMap.set(event.time, [ event ])\r\n        } else {\r\n            timeMap.set(event.time, [...otherEvents, event ]);\r\n        }\r\n    });\r\n    timeMap.forEach(eventList => {\r\n        marks[eventList[0].time] = <SliderEventGroup events={eventList}></SliderEventGroup>\r\n    });\r\n    marks[timeRange + 60] = {\r\n        label: <div className='event-group'>\r\n                <div className='left event-group-side'>\r\n                    <Spacer></Spacer>\r\n                    <AddItemButton side={buildIdentifier.left}></AddItemButton>\r\n                </div>\r\n                <div className='right event-group-side'>\r\n                    <Spacer></Spacer>\r\n                    <AddItemButton side={buildIdentifier.right}></AddItemButton>\r\n                </div>\r\n            </div>\r\n    }\r\n\r\n    return <div className=\"slidercontainer\">\r\n        <Slider\r\n            defaultValue={0}\r\n            min={0}\r\n            max={timeRange + 60}\r\n            step={5}\r\n            vertical={true}\r\n            reverse={true}\r\n            onChange={changeTime}\r\n            marks={marks}\r\n            tooltipVisible={true}\r\n            tooltipPlacement='top'\r\n            tipFormatter={SliderTooltip}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default connect(\r\n    mapState, \r\n    mapDispatchToProps\r\n    )\r\n    (TimelineSlider);","import React from 'react';\r\nimport './ItemPicker.css';\r\nimport store, { buildIdentifier, buildSlices } from '../../../redux/store';\r\nimport { connect } from 'react-redux';\r\nimport { closeItemPicker } from '../../../redux/reducers/ItemPickerSlice';\r\nimport { shoesOfTheMagi } from '../../../data_objects/TestObjects';\r\nimport { Button} from 'antd';\r\n\r\ntype Slot = {\r\n    buildID: buildIdentifier,\r\n    index: number\r\n}\r\n\r\ntype SelectorProps = {\r\n    isSelectorOpen: boolean,\r\n    slot: Slot\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        isSelectorOpen: state.itemPicker.isOpen,\r\n        slot: state.itemPicker.slot\r\n    }\r\n}\r\n\r\nconst ItemPicker = ({isSelectorOpen, slot}: SelectorProps) => {\r\n\r\n    const closeSelector = () => {\r\n        store.dispatch({type: closeItemPicker})\r\n    }\r\n\r\n    //TODO: return item selected in the item picker instead of default shoesOfTheMagi\r\n    const selectItem = () => {\r\n        let action = {\r\n            type: buildSlices[slot.buildID].actions.setItemAt,\r\n            payload: {\r\n                index: slot.index,\r\n                item: shoesOfTheMagi\r\n            }\r\n        }\r\n        store.dispatch(action);\r\n        closeSelector();\r\n    }\r\n    \r\n    return (\r\n        <dialog \r\n            className='border-gradient item-picker'\r\n            open={isSelectorOpen}  \r\n            //style={isSelectorOpen ? {} : {display: 'none'}} //some css styling interferes with hiding the ItemPicker, this will force it to hide.\r\n            role='form'\r\n            aria-label='item picker'\r\n        >\r\n            <div className='major-container'>\r\n                <div className='search'>\r\n                    <div className='filters'>\r\n                        GENERAL\r\n                        <ul className='filter-list'>\r\n\r\n                        </ul>\r\n                        OFFENSIVE\r\n                        <ul className='filter-list'>\r\n\r\n                        </ul>\r\n                        DEFENSIVE\r\n                        <ul className='filter-list'>\r\n\r\n                        </ul>\r\n                        UTILITY\r\n                        <ul className='filter-list'>\r\n\r\n                        </ul>\r\n                    </div>\r\n                    <div className='search-items-and-input'>\r\n                        <input\r\n                            className='search-input'\r\n                            type='search'\r\n                        ></input>\r\n                        <ul className='search-results'>\r\n                            <li className='item-search-result'>dummy1</li>\r\n                            <li className='item-search-result'>dummy2</li>\r\n                            <li className='item-search-result'>dummy3</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className='item-view'>\r\n                    <div className='item-details'>\r\n                        \r\n                    </div>\r\n                    <div className='control-button-container'>\r\n                        <Button\r\n                            className='control-button'\r\n                            onClick={closeSelector}>Cancel</Button>\r\n                        <Button \r\n                            className='control-button'\r\n                            onClick={selectItem}>Select Item</Button>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        </dialog>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemPicker);","import React from 'react';\r\nimport './App.css';\r\nimport GodStats from '../GodStats/GodStats';\r\nimport TimelineSlider from '../TimelineSlider/TimelineSlider';\r\nimport ItemBuild from '../ItemBuild/ItemBuild';\r\nimport { buildIdentifier } from '../../redux/store';\r\nimport ItemPicker from '../ItemBuild/ItemPicker/ItemPicker';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <GodStats buildIdentifier={buildIdentifier.left}></GodStats>\r\n        <TimelineSlider />\r\n        <GodStats buildIdentifier={buildIdentifier.right}></GodStats>\r\n        <ItemPicker></ItemPicker>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}