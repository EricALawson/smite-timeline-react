{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\src\\\\components\\\\ItemBuild\\\\ItemPicker\\\\FilterList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nconst itemFilters = {\n  consumable: item => \"consumable\" in item,\n  relic: item => \"relic\" in item,\n  starter: item => \"starter\" in item,\n  power: item => item.stats.power > 0,\n  \"attack speed\": item => item.stats.attackSpeed > 0,\n  lifesteal: item => item.stats.lifesteal > 0,\n  penetration: item => item.stats.percentPenetration > 0 || item.stats.flatPenetration > 0,\n  physical: item => item.stats.physicalProtections > 0,\n  magical: item => item.stats.magicalProtections > 0,\n  health: item => item.stats.health > 0,\n  hp5: item => item.stats.hp5 > 0,\n  ccr: item => item.stats.crowdControlReduction > 0,\n  aura: item => \"aura\" in item,\n  movement: item => item.stats.hp5 > 0,\n  'cooldown %': item => item.stats.cooldownReduction > 0,\n  mana: item => item.stats.mana > 0,\n  mp5: item => item.stats.mp5 > 0\n};\nconst filterCategories = {\n  general: ['consumable', 'relic', 'starter'],\n  offensive: ['power', 'attack speed', 'lifesteal', 'penetration'],\n  defensive: ['physical', 'magical', 'health', 'hp5', 'ccr'],\n  utility: ['aura', 'movement', 'cooldown %', 'mana', 'mp5']\n};\n\nconst filterToComponent = (filterName, dispatch) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }, filterName, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onClick: () => dispatch({\n      type: 'itemPicker/toggleFilter',\n      payload: filterName\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default _s(() => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }, Object.entries(filterCategories).map(([filterCategory, filters]) => {\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"filterCategory\", /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"filter-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, filters.map(filter => filterToComponent(filter, dispatch))));\n  }));\n}, \"ZPvIBRIZlfRjjwmjGl7j1MARpLY=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/ItemBuild/ItemPicker/FilterList.tsx"],"names":["React","useDispatch","itemFilters","consumable","item","relic","starter","power","stats","attackSpeed","lifesteal","penetration","percentPenetration","flatPenetration","physical","physicalProtections","magical","magicalProtections","health","hp5","ccr","crowdControlReduction","aura","movement","cooldownReduction","mana","mp5","filterCategories","general","offensive","defensive","utility","filterToComponent","filterName","dispatch","type","payload","Object","entries","map","filterCategory","filters","filter"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,UAAU,EAAGC,IAAD,IAAgB,gBAAgBA,IAD5B;AAEhBC,EAAAA,KAAK,EAAGD,IAAD,IAAgB,WAAWA,IAFlB;AAGhBE,EAAAA,OAAO,EAAGF,IAAD,IAAgB,aAAaA,IAHtB;AAIhBG,EAAAA,KAAK,EAAGH,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWD,KAAX,GAAmB,CAJ1B;AAKhB,kBAAiBH,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWC,WAAX,GAAyB,CALzC;AAMhBC,EAAAA,SAAS,EAAGN,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWE,SAAX,GAAuB,CANlC;AAOhBC,EAAAA,WAAW,EAAGP,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWI,kBAAX,GAAgC,CAAhC,IAAqCR,IAAI,CAACI,KAAL,CAAWK,eAAX,GAA6B,CAP/E;AAQhBC,EAAAA,QAAQ,EAAGV,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWO,mBAAX,GAAiC,CAR3C;AAShBC,EAAAA,OAAO,EAAGZ,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWS,kBAAX,GAAgC,CATzC;AAUhBC,EAAAA,MAAM,EAAGd,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWU,MAAX,GAAoB,CAV5B;AAWhBC,EAAAA,GAAG,EAAGf,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWW,GAAX,GAAiB,CAXtB;AAYhBC,EAAAA,GAAG,EAAGhB,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWa,qBAAX,GAAmC,CAZxC;AAahBC,EAAAA,IAAI,EAAGlB,IAAD,IAAgB,UAAUA,IAbhB;AAchBmB,EAAAA,QAAQ,EAAGnB,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWW,GAAX,GAAiB,CAd3B;AAehB,gBAAef,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWgB,iBAAX,GAA+B,CAf7C;AAgBhBC,EAAAA,IAAI,EAAGrB,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWiB,IAAX,GAAkB,CAhBxB;AAiBhBC,EAAAA,GAAG,EAAGtB,IAAD,IAAgBA,IAAI,CAACI,KAAL,CAAWkB,GAAX,GAAiB;AAjBtB,CAApB;AAsBA,MAAMC,gBAAkC,GAAG;AACvCC,EAAAA,OAAO,EAAE,CAAC,YAAD,EAAe,OAAf,EAAwB,SAAxB,CAD8B;AAEvCC,EAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,cAAV,EAA0B,WAA1B,EAAuC,aAAvC,CAF4B;AAGvCC,EAAAA,SAAS,EAAE,CAAC,UAAD,EAAa,SAAb,EAAwB,QAAxB,EAAkC,KAAlC,EAAyC,KAAzC,CAH4B;AAIvCC,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,YAArB,EAAmC,MAAnC,EAA2C,KAA3C;AAJ8B,CAA3C;;AAQA,MAAMC,iBAAiB,GAAG,CAACC,UAAD,EAAyBC,QAAzB,KAA2E;AACjG,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFD,UADE,eAEH;AAAO,IAAA,IAAI,EAAC,UAAZ;AACI,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC;AACpBC,MAAAA,IAAI,EAAE,yBADc;AAEpBC,MAAAA,OAAO,EAAEH;AAFW,KAAD,CAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AASH,CAVD;;AAYA,kBAAe,MAAM;AAAA;;AACjB,QAAMC,QAA6C,GAAGjC,WAAW,EAAjE;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFoC,MAAM,CAACC,OAAP,CAAeX,gBAAf,EAAiCY,GAAjC,CAAqC,CAAC,CAACC,cAAD,EAAiBC,OAAjB,CAAD,KAA+B;AACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,OAAO,CAACF,GAAR,CAAYG,MAAM,IAAIV,iBAAiB,CAACU,MAAD,EAASR,QAAT,CAAvC,CADL,CADJ;AAKH,GANA,CADE,CAAP;AASH,CAZD;AAAA,UAC0DjC,WAD1D;AAAA","sourcesContent":["import Item from \"../../../data_objects/Item\"\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst itemFilters = {\r\n    consumable: (item: Item) => \"consumable\" in item,\r\n    relic: (item: Item) => \"relic\" in item,\r\n    starter: (item: Item) => \"starter\" in item,\r\n    power: (item: Item) => item.stats.power > 0,\r\n    \"attack speed\": (item: Item) => item.stats.attackSpeed > 0,\r\n    lifesteal: (item: Item) => item.stats.lifesteal > 0,\r\n    penetration: (item: Item) => item.stats.percentPenetration > 0 || item.stats.flatPenetration > 0,\r\n    physical: (item: Item) => item.stats.physicalProtections > 0,\r\n    magical: (item: Item) => item.stats.magicalProtections > 0,\r\n    health: (item: Item) => item.stats.health > 0,\r\n    hp5: (item: Item) => item.stats.hp5 > 0,\r\n    ccr: (item: Item) => item.stats.crowdControlReduction > 0,\r\n    aura: (item: Item) => \"aura\" in item,\r\n    movement: (item: Item) => item.stats.hp5 > 0,\r\n    'cooldown %': (item: Item) => item.stats.cooldownReduction > 0,\r\n    mana: (item: Item) => item.stats.mana > 0,\r\n    mp5: (item: Item) => item.stats.mp5 > 0,\r\n}\r\n\r\ntype FilterName = keyof typeof itemFilters;\r\ntype FilterCategories = Record<string, FilterName[]>\r\nconst filterCategories: FilterCategories = {\r\n    general: ['consumable', 'relic', 'starter'],\r\n    offensive: ['power', 'attack speed', 'lifesteal', 'penetration'],\r\n    defensive: ['physical', 'magical', 'health', 'hp5', 'ccr'],\r\n    utility: ['aura', 'movement', 'cooldown %', 'mana', 'mp5']\r\n}\r\n\r\ntype ItemFilter = (item: Item) => boolean\r\nconst filterToComponent = (filterName: FilterName, dispatch: Dispatch<PayloadAction<FilterName>>) => {\r\n    return <div>\r\n        {filterName}\r\n        <input type=\"checkbox\" \r\n            onClick={() => dispatch({\r\n                type: 'itemPicker/toggleFilter', \r\n                payload: filterName\r\n            })}>\r\n        </input>\r\n    </div>\r\n}\r\n\r\nexport default () => {\r\n    const dispatch: Dispatch<PayloadAction<FilterName>> = useDispatch();\r\n    \r\n    return <div className='filters'>\r\n        {Object.entries(filterCategories).map(([filterCategory, filters]) => {\r\n            <div>filterCategory\r\n                <ul className='filter-list'>\r\n                    {filters.map(filter => filterToComponent(filter, dispatch))}\r\n                </ul>\r\n            </div>\r\n        })}\r\n    </div>\r\n};"]},"metadata":{},"sourceType":"module"}