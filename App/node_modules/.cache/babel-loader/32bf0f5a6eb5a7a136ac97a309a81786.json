{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React from'react';import'./TimelineSlider.css';import{connect}from'react-redux';import{Slider}from'antd';import{createAction}from'@reduxjs/toolkit';import buildIdentifier from\"../../redux/buildIdentifier\";import makeStatsSelector from'../../redux/selectors/StatsSelector';import AddItemButton from'../ItemBuild/AddItemButton/AddItemButton';import SliderEventGroup from'./SliderEventGroup';import SliderTooltip from'./SliderTooltip';var mapDispatchToProps=function mapDispatchToProps(dispatch){return{changeTime:function changeTime(value){if(typeof value==='number'){dispatch(createAction('setTime')(value));}}};};var mapState=function mapState(state){var leftEvents=makeStatsSelector(buildIdentifier.left)(state.left);var rightEvents=makeStatsSelector(buildIdentifier.right)(state.right);var timeRange=leftEvents[leftEvents.length-1]>rightEvents[rightEvents.length-1]?leftEvents[leftEvents.length-1].time:rightEvents[rightEvents.length-1].time;return{leftEvents:leftEvents,rightEvents:rightEvents,timeRange:timeRange};};var Spacer=function Spacer(){return/*#__PURE__*/React.createElement(\"div\",{className:\"level-spacer\"});};function TimelineSlider(_ref){var changeTime=_ref.changeTime,leftEvents=_ref.leftEvents,rightEvents=_ref.rightEvents,timeRange=_ref.timeRange;var marks={};var timeMap=new Map();leftEvents.concat(rightEvents).forEach(function(event){var otherEvents=timeMap.get(event.time);if(!otherEvents){timeMap.set(event.time,[event]);}else{timeMap.set(event.time,[].concat(_toConsumableArray(otherEvents),[event]));}});timeMap.forEach(function(eventList){marks[eventList[0].time]=/*#__PURE__*/React.createElement(SliderEventGroup,{events:eventList});});marks[timeRange+90]={label:/*#__PURE__*/React.createElement(\"div\",{className:\"event-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"left event-group-side\"},/*#__PURE__*/React.createElement(Spacer,null),/*#__PURE__*/React.createElement(AddItemButton,{side:buildIdentifier.left})),/*#__PURE__*/React.createElement(\"div\",{className:\"right event-group-side\"},/*#__PURE__*/React.createElement(Spacer,null),/*#__PURE__*/React.createElement(AddItemButton,{side:buildIdentifier.right})))};return/*#__PURE__*/React.createElement(\"div\",{className:\"slidercontainer\"},/*#__PURE__*/React.createElement(Slider,{defaultValue:0,min:0,max:timeRange+60,step:5,vertical:true,reverse:true,onChange:changeTime,marks:marks//tooltipVisible={true} disabled until I figure out how to make the tooltip display under the ItemPicker.\n,tooltipPlacement:\"top\",tipFormatter:SliderTooltip}));}export default connect(mapState,mapDispatchToProps)(TimelineSlider);","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/TimelineSlider/TimelineSlider.tsx"],"names":["React","connect","Slider","createAction","buildIdentifier","makeStatsSelector","AddItemButton","SliderEventGroup","SliderTooltip","mapDispatchToProps","dispatch","changeTime","value","mapState","state","leftEvents","left","rightEvents","right","timeRange","length","time","Spacer","TimelineSlider","marks","timeMap","Map","concat","forEach","event","otherEvents","get","set","eventList","label"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './TimelineSlider.css';\r\nimport { connect } from 'react-redux';\r\nimport {Slider} from 'antd';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { SliderMarks } from 'antd/lib/slider';\r\nimport { RootState } from '../../redux/store';\r\nimport buildIdentifier from \"../../redux/buildIdentifier\";\r\nimport makeStatsSelector, { BuildEvent } from '../../redux/selectors/StatsSelector';\r\nimport AddItemButton from '../ItemBuild/AddItemButton/AddItemButton';\r\nimport SliderEventGroup from './SliderEventGroup';\r\nimport SliderTooltip from './SliderTooltip';\r\n\r\n\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        changeTime: (value: number) => {\r\n            if (typeof value === 'number') {\r\n                dispatch( createAction<number>('setTime')(value) );\r\n            }\r\n        }\r\n    }  \r\n}\r\n\r\ntype StateProps = ReturnType<typeof mapState>\r\nconst mapState = (state: RootState) => {\r\n    const leftEvents = makeStatsSelector(buildIdentifier.left)(state.left);\r\n    const rightEvents = makeStatsSelector(buildIdentifier.right)(state.right);\r\n    const timeRange = leftEvents[leftEvents.length -1] > rightEvents[rightEvents.length -1]\r\n                        ? leftEvents[leftEvents.length -1].time\r\n                        : rightEvents[rightEvents.length -1].time;\r\n    return {\r\n        leftEvents: leftEvents,\r\n        rightEvents: rightEvents,\r\n        timeRange: timeRange\r\n    }\r\n}\r\n\r\nconst Spacer = () => <div className='level-spacer'></div>\r\n\r\nfunction TimelineSlider({changeTime, leftEvents, rightEvents, timeRange}: DispatchProps & StateProps) {\r\n    const marks: SliderMarks = {};\r\n    const timeMap: Map<number, BuildEvent[]> = new Map();\r\n    leftEvents.concat(rightEvents).forEach((event: BuildEvent) => {\r\n        const otherEvents = timeMap.get(event.time);\r\n        if( !otherEvents) {\r\n            timeMap.set(event.time, [ event ])\r\n        } else {\r\n            timeMap.set(event.time, [...otherEvents, event ]);\r\n        }\r\n    });\r\n    timeMap.forEach(eventList => {\r\n        marks[eventList[0].time] = <SliderEventGroup events={eventList}></SliderEventGroup>\r\n    });\r\n    marks[timeRange + 90] = {\r\n        label: <div className='event-group'>\r\n                <div className='left event-group-side'>\r\n                    <Spacer></Spacer>\r\n                    <AddItemButton side={buildIdentifier.left}></AddItemButton>\r\n                </div>\r\n                <div className='right event-group-side'>\r\n                    <Spacer></Spacer>\r\n                    <AddItemButton side={buildIdentifier.right}></AddItemButton>\r\n                </div>\r\n            </div>\r\n    }\r\n\r\n    return <div className=\"slidercontainer\">\r\n        <Slider\r\n            defaultValue={0}\r\n            min={0}\r\n            max={timeRange + 60}\r\n            step={5}\r\n            vertical={true}\r\n            reverse={true}\r\n            onChange={changeTime}\r\n            marks={marks}\r\n            //tooltipVisible={true} disabled until I figure out how to make the tooltip display under the ItemPicker.\r\n            tooltipPlacement='top'\r\n            tipFormatter={SliderTooltip}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default connect(\r\n    mapState, \r\n    mapDispatchToProps\r\n    )\r\n    (TimelineSlider);"]},"metadata":{},"sourceType":"module"}