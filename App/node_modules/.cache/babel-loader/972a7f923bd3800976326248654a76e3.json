{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\src\\\\components\\\\GodStats\\\\GodStats.tsx\";\nimport React from 'react';\nimport './GodStats.css';\nimport { connect } from 'react-redux';\nimport makeStatsSelector from '../../redux/selectors/StatsSelector';\nimport GodSelector from './GodSelector';\n\nconst GodStats = ({\n  buildIdentifier\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"GodStats border-gradient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" major-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GodSelector, {\n    buildIdentifier: buildIdentifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(StatTable, {\n    buildIdentifier: buildIdentifier,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default GodStats;\nvar statsSelector = null;\n\nconst StatTable = ({\n  buildIdentifier\n}) => {\n  const selector = statsSelector !== null && statsSelector !== void 0 ? statsSelector : makeStatsSelector(buildIdentifier);\n\n  const displayStat = name => {\n    const mapStateToProps = state => {\n      let build = state[buildIdentifier];\n      let events = selector(build);\n      events = events.filter(event => event.time <= state.time);\n      let stats = events[events.length - 1].stats; //the last event whose time is <= current time\n\n      let val = stats[name];\n\n      if (typeof val == 'number') {\n        return {\n          name: name,\n          val: val\n        };\n      }\n    };\n\n    const ConnectedStatItem = connect(mapStateToProps)(StatItem);\n    return /*#__PURE__*/React.createElement(ConnectedStatItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }\n  }, displayStat('health'), displayStat('mana'), displayStat('hp5'), displayStat('mp5'), displayStat('power'), displayStat('critChance'), displayStat('flatPenetration'), displayStat('percentPenetration'), displayStat('attackSpeed'), displayStat('physicalProtection'), displayStat('magicalProtection'), displayStat('moveSpeed'), displayStat('cooldownReduction'), displayStat('crowdControlReduction')));\n};\n\nconst StatItem = props => {\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"stat-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, props.name, \":\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, props.val.toFixed(0)));\n};","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/GodStats/GodStats.tsx"],"names":["React","connect","makeStatsSelector","GodSelector","GodStats","buildIdentifier","statsSelector","StatTable","selector","displayStat","name","mapStateToProps","state","build","events","filter","event","time","stats","length","val","ConnectedStatItem","StatItem","props","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './GodStats.css';\r\nimport { connect } from 'react-redux';\r\nimport makeStatsSelector from '../../redux/selectors/StatsSelector';\r\nimport Build from '../../data_objects/Build';\r\nimport StatBlock from '../../data_objects/StatBlock';\r\nimport GodSelector from './GodSelector';\r\nimport { RootState } from '../../redux/store';\r\nimport buildIdentifier from \"../../redux/buildIdentifier\";\r\n\r\ntype BuildID = {\r\n    buildIdentifier: buildIdentifier\r\n}\r\ntype NameValPair = {\r\n    name: keyof StatBlock,\r\n    val: number\r\n}\r\n\r\nconst GodStats = ({buildIdentifier}: BuildID) => {\r\n    return(\r\n        <div className='GodStats border-gradient'>\r\n            <div className=\" major-container\">\r\n                <GodSelector buildIdentifier={buildIdentifier}></GodSelector>\r\n                <StatTable buildIdentifier={buildIdentifier}></StatTable>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GodStats;\r\n\r\nvar statsSelector: ReturnType<typeof makeStatsSelector> | null = null;\r\nconst StatTable = ({buildIdentifier}: BuildID) => {\r\n    const selector = statsSelector ?? makeStatsSelector(buildIdentifier)\r\n    const displayStat = (name: keyof StatBlock) => {\r\n        const mapStateToProps = (state: RootState) => {\r\n            let build: Build = state[buildIdentifier];\r\n            let events = selector(build);\r\n            events = events.filter(event => event.time <= state.time);\r\n            let stats = events[events.length - 1].stats; //the last event whose time is <= current time\r\n            let val = stats[name]\r\n            if (typeof val == 'number') {\r\n                return {\r\n                    name: name,\r\n                    val: val\r\n                }\r\n            }\r\n        }\r\n        \r\n        const ConnectedStatItem = connect(mapStateToProps)(StatItem);\r\n        return (\r\n            <ConnectedStatItem></ConnectedStatItem>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <table><tbody>\r\n                {displayStat('health')}\r\n                {displayStat('mana')}\r\n                {displayStat('hp5')}\r\n                {displayStat('mp5')}\r\n                {displayStat('power')}\r\n                {displayStat('critChance')}\r\n                {displayStat('flatPenetration')}\r\n                {displayStat('percentPenetration')}\r\n                {displayStat('attackSpeed')}\r\n                {displayStat('physicalProtection')}\r\n                {displayStat('magicalProtection')}\r\n                {displayStat('moveSpeed')}\r\n                {displayStat('cooldownReduction')}\r\n                {displayStat('crowdControlReduction')}\r\n        </tbody></table>\r\n    );\r\n}\r\n\r\nconst StatItem = (props: NameValPair) => {\r\n    return(\r\n        <tr>\r\n            <td className='stat-name'>\r\n                {props.name}:\r\n            </td>\r\n            <td className='stat-value'>\r\n              {props.val.toFixed(0)}  \r\n            </td>\r\n        </tr>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}