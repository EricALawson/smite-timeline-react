{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\src\\\\components\\\\ItemBuild\\\\ItemPicker\\\\ItemInfoBrief.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport itemPicker from '../../../redux/reducers/ItemPickerSlice';\nimport './ItemInfoBrief.css';\n\nconst ItemInfoBrief = ({\n  item,\n  itemFamily\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-search-result\",\n    \"aria-role\": \"button\",\n    \"aria-label\": 'select ' + item.name,\n    onClick: event => dispatch({\n      type: itemPicker.actions.setSelected,\n      payload: item\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"item-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, item.name.toUpperCase()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-info-across\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brief-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"words\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-costs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, item.goldCost)));\n};\n\n_s(ItemInfoBrief, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ItemInfoBrief;\nexport default ItemInfoBrief;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemInfoBrief\");","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/ItemBuild/ItemPicker/ItemInfoBrief.tsx"],"names":["React","useDispatch","itemPicker","ItemInfoBrief","item","itemFamily","dispatch","name","event","type","actions","setSelected","payload","toUpperCase","image","goldCost"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAO,qBAAP;;AAQA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA+B;AAAA;;AACjD,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,sBAAO;AACH,IAAA,SAAS,EAAC,oBADP;AAEH,iBAAU,QAFP;AAGH,kBAAY,YAAYG,IAAI,CAACG,IAH1B;AAIH,IAAA,OAAO,EAAEC,KAAK,IAAIF,QAAQ,CAAC;AACvBG,MAAAA,IAAI,EAAEP,UAAU,CAACQ,OAAX,CAAmBC,WADF;AAEvBC,MAAAA,OAAO,EAAER;AAFc,KAAD,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASH;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,IAAI,CAACG,IAAL,CAAUM,WAAV,EAA3B,CATG,eAUH;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAET,IAAI,CAACU,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BV,IAAI,CAACW,QAAlC,CAHJ,CAVG,CAAP;AAgBH,CAlBD;;GAAMZ,a;UACeF,W;;;KADfE,a;AAmBN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport Item from '../../../data_objects/Item';\r\nimport { useDispatch } from 'react-redux';\r\nimport itemPicker from '../../../redux/reducers/ItemPickerSlice';\r\nimport './ItemInfoBrief.css';\r\n\r\n\r\ntype Props = {\r\n    item: Item,\r\n    itemFamily: any\r\n}\r\n\r\nconst ItemInfoBrief = ({item, itemFamily}: Props) => {\r\n    const dispatch = useDispatch();\r\n    return <div \r\n        className='item-search-result'\r\n        aria-role='button'\r\n        aria-label={'select ' + item.name}\r\n        onClick={event => dispatch({\r\n            type: itemPicker.actions.setSelected,\r\n            payload: item\r\n        })}\r\n        >\r\n        <h1 className='item-name'>{item.name.toUpperCase()}</h1>\r\n        <div className='item-info-across'>\r\n            <img src={item.image}></img>\r\n            <div className='brief-desc'>words</div>\r\n            <div className='item-costs'>{item.goldCost}</div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default ItemInfoBrief;"]},"metadata":{},"sourceType":"module"}