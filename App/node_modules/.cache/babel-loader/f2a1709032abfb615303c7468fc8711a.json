{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import{EmptySlot}from'../../data_objects/Item';import Build from'../../data_objects/Build';var setItemAt=function setItemAt(state,action){var items=_toConsumableArray(state.items);items[action.payload.index]=action.payload.item;return Build(state.god,items,state.killTiming);};var removeItemAt=function removeItemAt(state,action){var items=_toConsumableArray(state.items);items[action.payload]=EmptySlot;return Build(state.god,items,state.killTiming);};export{setItemAt,removeItemAt};","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/redux/reducers/itemReducer.ts"],"names":["EmptySlot","Build","setItemAt","state","action","items","payload","index","item","god","killTiming","removeItemAt"],"mappings":"kMACA,OAAeA,SAAf,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CAOA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAeC,MAAf,CAAyD,CACvE,GAAIC,CAAAA,KAAK,oBAAOF,KAAK,CAACE,KAAb,CAAT,CACAA,KAAK,CAACD,MAAM,CAACE,OAAP,CAAeC,KAAhB,CAAL,CAA8BH,MAAM,CAACE,OAAP,CAAeE,IAA7C,CACA,MAAOP,CAAAA,KAAK,CACRE,KAAK,CAACM,GADE,CAERJ,KAFQ,CAGRF,KAAK,CAACO,UAHE,CAAZ,CAKH,CARD,CAUA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,KAAD,CAAeC,MAAf,CAAiD,CAClE,GAAIC,CAAAA,KAAK,oBAAOF,KAAK,CAACE,KAAb,CAAT,CACAA,KAAK,CAACD,MAAM,CAACE,OAAR,CAAL,CAAwBN,SAAxB,CACA,MAAOC,CAAAA,KAAK,CACRE,KAAK,CAACM,GADE,CAERJ,KAFQ,CAGRF,KAAK,CAACO,UAHE,CAAZ,CAKH,CARD,CAUA,OAAQR,SAAR,CAAmBS,YAAnB","sourcesContent":["import { PayloadAction } from '@reduxjs/toolkit';\r\nimport Item, { EmptySlot } from '../../data_objects/Item';\r\nimport Build from '../../data_objects/Build';\r\n\r\ntype SetItemPayload = {\r\n    index: number,\r\n    item: Item\r\n}\r\n\r\nconst setItemAt = (state: Build, action: PayloadAction<SetItemPayload>) => {\r\n    let items = [...state.items];\r\n    items[action.payload.index] = action.payload.item;\r\n    return Build(\r\n        state.god,\r\n        items,\r\n        state.killTiming\r\n    )\r\n};\r\n\r\nconst removeItemAt = (state: Build, action: PayloadAction<number>) => {\r\n    let items = [...state.items];\r\n    items[action.payload] = EmptySlot;\r\n    return Build(\r\n        state.god,\r\n        items,\r\n        state.killTiming\r\n    )\r\n}\r\n\r\nexport {setItemAt, removeItemAt};"]},"metadata":{},"sourceType":"module"}