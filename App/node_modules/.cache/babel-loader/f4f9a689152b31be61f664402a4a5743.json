{"ast":null,"code":"import { Ares, Cerberus } from \"../data_objects/TestObjects\";\n\nclass GodProvider {\n  //Singleton boilerplate\n  static getInstance() {\n    if (!GodProvider.instance) {\n      GodProvider.instance = new GodProvider();\n    }\n\n    return GodProvider.instance;\n  } //class code\n\n\n  constructor() {\n    this.gods = new Map();\n    this.gods.set('Ares', Ares);\n    this.gods.set('Cerberus', Cerberus);\n  }\n\n  get godNames() {\n    return Array.from(this.gods.keys());\n  }\n\n  getGod(name) {\n    return this.gods.get(name);\n  }\n\n}\n\nGodProvider.instance = void 0;\nexport default GodProvider;","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/App/src/redux/GodProvider.ts"],"names":["Ares","Cerberus","GodProvider","getInstance","instance","constructor","gods","Map","set","godNames","Array","from","keys","getGod","name","get"],"mappings":"AAEA,SAASA,IAAT,EAAeC,QAAf,QAA+B,6BAA/B;;AAEA,MAAMC,WAAN,CAAkB;AACd;AAGkB,SAAXC,WAAW,GAAgB;AAC9B,QAAI,CAACD,WAAW,CAACE,QAAjB,EAA2B;AACvBF,MAAAA,WAAW,CAACE,QAAZ,GAAuB,IAAIF,WAAJ,EAAvB;AACH;;AACD,WAAOA,WAAW,CAACE,QAAnB;AACH,GATa,CAWd;;;AAGQC,EAAAA,WAAW,GAAG;AAAA,SAFdC,IAEc,GAFP,IAAIC,GAAJ,EAEO;AAClB,SAAKD,IAAL,CAAUE,GAAV,CAAc,MAAd,EAAsBR,IAAtB;AACA,SAAKM,IAAL,CAAUE,GAAV,CAAc,UAAd,EAA0BP,QAA1B;AACH;;AAEW,MAARQ,QAAQ,GAAa;AACrB,WAAOC,KAAK,CAACC,IAAN,CAAW,KAAKL,IAAL,CAAUM,IAAV,EAAX,CAAP;AACH;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAA8B;AAChC,WAAO,KAAKR,IAAL,CAAUS,GAAV,CAAcD,IAAd,CAAP;AACH;;AAzBa;;AAAZZ,W,CAEaE,Q;AA0BnB,eAAeF,WAAf","sourcesContent":["\r\nimport { God } from \"@smite-timeline/smite-game-objects\";\r\nimport { Ares, Cerberus } from \"../data_objects/TestObjects\";\r\n\r\nclass GodProvider {\r\n    //Singleton boilerplate\r\n    private static instance: GodProvider;\r\n\r\n    static getInstance(): GodProvider {\r\n        if (!GodProvider.instance) {\r\n            GodProvider.instance = new GodProvider();\r\n        }\r\n        return GodProvider.instance;\r\n    }\r\n\r\n    //class code\r\n    private gods = new Map<string, God>();\r\n\r\n    private constructor() {\r\n        this.gods.set('Ares', Ares);\r\n        this.gods.set('Cerberus', Cerberus)\r\n    }\r\n\r\n    get godNames(): string[] {\r\n        return Array.from(this.gods.keys());\r\n    }\r\n\r\n    getGod(name: string): God|undefined {\r\n        return this.gods.get(name);\r\n    }\r\n}\r\n\r\nexport default GodProvider;"]},"metadata":{},"sourceType":"module"}