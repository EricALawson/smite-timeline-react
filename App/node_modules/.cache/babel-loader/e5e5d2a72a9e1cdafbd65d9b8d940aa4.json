{"ast":null,"code":"import _classCallCheck from\"C:/Users/erica/Documents/repos/JavaScript/smite-timeline/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/erica/Documents/repos/JavaScript/smite-timeline/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{Ares,Cerberus}from\"../data_objects/TestObjects\";var GodProvider=/*#__PURE__*/function(){_createClass(GodProvider,null,[{key:\"getInstance\",//Singleton boilerplate\nvalue:function getInstance(){if(!GodProvider.instance){GodProvider.instance=new GodProvider();}return GodProvider.instance;}//class code\n}]);function GodProvider(){_classCallCheck(this,GodProvider);this.gods=new Map();this.gods.set('Ares',Ares);this.gods.set('Cerberus',Cerberus);}_createClass(GodProvider,[{key:\"getGod\",value:function getGod(name){return this.gods.get(name);}},{key:\"godNames\",get:function get(){return Array.from(this.gods.keys());}}]);return GodProvider;}();GodProvider.instance=void 0;export default GodProvider;","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/redux/GodProvider.ts"],"names":["Ares","Cerberus","GodProvider","instance","gods","Map","set","name","get","Array","from","keys"],"mappings":"4VACA,OAASA,IAAT,CAAeC,QAAf,KAA+B,6BAA/B,C,GAEMC,CAAAA,W,2EACF;4BAGkC,CAC9B,GAAI,CAACA,WAAW,CAACC,QAAjB,CAA2B,CACvBD,WAAW,CAACC,QAAZ,CAAuB,GAAID,CAAAA,WAAJ,EAAvB,CACH,CACD,MAAOA,CAAAA,WAAW,CAACC,QAAnB,CACH,CAED;IAGA,sBAAsB,wCAFdC,IAEc,CAFP,GAAIC,CAAAA,GAAJ,EAEO,CAClB,KAAKD,IAAL,CAAUE,GAAV,CAAc,MAAd,CAAsBN,IAAtB,EACA,KAAKI,IAAL,CAAUE,GAAV,CAAc,UAAd,CAA0BL,QAA1B,EACH,C,8DAMMM,I,CAA6B,CAChC,MAAO,MAAKH,IAAL,CAAUI,GAAV,CAAcD,IAAd,CAAP,CACH,C,oCANwB,CACrB,MAAOE,CAAAA,KAAK,CAACC,IAAN,CAAW,KAAKN,IAAL,CAAUO,IAAV,EAAX,CAAP,CACH,C,2BArBCT,W,CAEaC,Q,QA0BnB,cAAeD,CAAAA,WAAf","sourcesContent":["import God from \"../data_objects/God\";\r\nimport { Ares, Cerberus } from \"../data_objects/TestObjects\";\r\n\r\nclass GodProvider {\r\n    //Singleton boilerplate\r\n    private static instance: GodProvider;\r\n\r\n    static getInstance(): GodProvider {\r\n        if (!GodProvider.instance) {\r\n            GodProvider.instance = new GodProvider();\r\n        }\r\n        return GodProvider.instance;\r\n    }\r\n\r\n    //class code\r\n    private gods = new Map<string, God>();\r\n\r\n    private constructor() {\r\n        this.gods.set('Ares', Ares);\r\n        this.gods.set('Cerberus', Cerberus)\r\n    }\r\n\r\n    get godNames(): string[] {\r\n        return Array.from(this.gods.keys());\r\n    }\r\n\r\n    getGod(name: string): God|undefined {\r\n        return this.gods.get(name);\r\n    }\r\n}\r\n\r\nexport default GodProvider;"]},"metadata":{},"sourceType":"module"}