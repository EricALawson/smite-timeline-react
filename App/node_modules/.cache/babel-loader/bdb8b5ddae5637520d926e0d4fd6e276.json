{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\src\\\\components\\\\ItemBuild\\\\ItemSlot\\\\ItemSlot.tsx\";\nimport React from 'react';\nimport './ItemSlot.css';\nimport { connect } from 'react-redux';\n\nconst mapDispatch = dispatch => {\n  return {\n    openItemPicker: slot => {\n      const action = {\n        type: 'itemPicker/openItemPicker',\n        payload: slot\n      };\n      dispatch(action);\n    }\n  };\n};\n\nconst ItemSlot = ({\n  item,\n  slot\n}) => {\n  const component = ({\n    openItemPicker\n  }) => {\n    const open = () => openItemPicker(slot);\n\n    return /*#__PURE__*/React.createElement(\"img\", {\n      className: 'item-slot',\n      src: item.image,\n      alt: \"selected item\",\n      onClick: open,\n      role: \"button\",\n      \"aria-label\": \"item slot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const ConnectedComponent = connect(null, mapDispatch)(component);\n  return /*#__PURE__*/React.createElement(ConnectedComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  });\n};\n\n_c = ItemSlot;\nexport default ItemSlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemSlot\");","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/ItemBuild/ItemSlot/ItemSlot.tsx"],"names":["React","connect","mapDispatch","dispatch","openItemPicker","slot","action","type","payload","ItemSlot","item","component","open","image","ConnectedComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAGA,SAASC,OAAT,QAAwB,aAAxB;;AAQA,MAAMC,WAAW,GAAIC,QAAD,IAAmB;AACnC,SAAO;AACHC,IAAAA,cAAc,EAAGC,IAAD,IAAgB;AAC5B,YAAMC,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,2BADK;AAEXC,QAAAA,OAAO,EAAEH;AAFE,OAAf;AAIAF,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACH;AAPE,GAAP;AASH,CAVD;;AAYA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQL,EAAAA;AAAR,CAAD,KAA8B;AAE3C,QAAMM,SAAS,GAAG,CAAC;AAACP,IAAAA;AAAD,GAAD,KAAqC;AACnD,UAAMQ,IAAI,GAAG,MAAMR,cAAc,CAACC,IAAD,CAAjC;;AACA,wBACI;AACI,MAAA,SAAS,EAAE,WADf;AAEI,MAAA,GAAG,EAAEK,IAAI,CAACG,KAFd;AAGI,MAAA,GAAG,EAAC,eAHR;AAII,MAAA,OAAO,EAAED,IAJb;AAKI,MAAA,IAAI,EAAC,QALT;AAMI,oBAAW,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASP,GAXG;;AAYA,QAAME,kBAAkB,GAAGb,OAAO,CAAC,IAAD,EAAOC,WAAP,CAAP,CAA2BS,SAA3B,CAA3B;AACA,sBAAO,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAhBD;;KAAMF,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport './ItemSlot.css';\r\nimport Item from '../../../data_objects/Item';\r\nimport { Slot } from '../../../redux/reducers/ItemPickerSlice';\r\nimport { connect } from 'react-redux';\r\n\r\ntype SlotProps = {\r\n    item: Item,\r\n    slot: Slot\r\n}\r\ntype DispatchProp = ReturnType<typeof mapDispatch>\r\n\r\nconst mapDispatch = (dispatch: any) => { \r\n    return {\r\n        openItemPicker: (slot: Slot) => { \r\n            const action = {\r\n                type: 'itemPicker/openItemPicker',\r\n                payload: slot\r\n            }\r\n            dispatch(action) \r\n        } \r\n    }\r\n};\r\n\r\nconst ItemSlot = ({ item, slot}: SlotProps) => {\r\n\r\n    const component = ({openItemPicker}: DispatchProp) =>  {\r\n        const open = () => openItemPicker(slot)\r\n        return (\r\n            <img \r\n                className={'item-slot'} \r\n                src={item.image} \r\n                alt='selected item' \r\n                onClick={open} \r\n                role='button'\r\n                aria-label='item slot'></img>\r\n        )\r\n};\r\n    const ConnectedComponent = connect(null, mapDispatch)(component);\r\n    return <ConnectedComponent></ConnectedComponent>\r\n}\r\n\r\n\r\n\r\nexport default ItemSlot;"]},"metadata":{},"sourceType":"module"}