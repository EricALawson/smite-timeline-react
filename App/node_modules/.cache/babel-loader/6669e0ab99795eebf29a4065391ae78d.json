{"ast":null,"code":"import _slicedToArray from\"C:/Users/erica/Documents/repos/JavaScript/smite-timeline/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useDispatch}from\"react-redux\";var itemFilters={general:{consumable:function consumable(item){return\"consumable\"in item;},relic:function relic(item){return\"relic\"in item;},starter:function starter(item){return\"starter\"in item;}},offensive:{power:function power(item){return item.stats.power>0;},\"attack speed\":function attackSpeed(item){return item.stats.attackSpeed>0;},lifesteal:function lifesteal(item){return item.stats.lifesteal>0;},penetration:function penetration(item){return item.stats.percentPenetration>0||item.stats.flatPenetration>0;}},defensive:{physical:function physical(item){return item.stats.physicalProtections>0;},magical:function magical(item){return item.stats.magicalProtections>0;},health:function health(item){return item.stats.health>0;},hp5:function hp5(item){return item.stats.hp5>0;},ccr:function ccr(item){return item.stats.crowdControlReduction>0;}},utility:{aura:function aura(item){return\"aura\"in item;},movement:function movement(item){return item.stats.hp5>0;},'cooldown %':function cooldown(item){return item.stats.cooldownReduction>0;},mana:function mana(item){return item.stats.mana>0;},mp5:function mp5(item){return item.stats.mp5>0;}}};var filterToComponent=function filterToComponent(_ref,dispatch){var _ref2=_slicedToArray(_ref,2),filterName=_ref2[0],filter=_ref2[1];return/*#__PURE__*/React.createElement(\"div\",null,filterName,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",onClick:function onClick(){return dispatch({type:'itemPicker/toggleFilter',payload:filter});}}));};export default(function(){var dispatch=useDispatch();return/*#__PURE__*/React.createElement(\"div\",{className:\"filters\"},\"GENERAL\",/*#__PURE__*/React.createElement(\"ul\",{className:\"filter-list\"},Object.entries(itemFilters.general).map(function(filter){return filterToComponent(filter,dispatch);})),\"OFFENSIVE\",/*#__PURE__*/React.createElement(\"ul\",{className:\"filter-list\"}),\"DEFENSIVE\",/*#__PURE__*/React.createElement(\"ul\",{className:\"filter-list\"}),\"UTILITY\",/*#__PURE__*/React.createElement(\"ul\",{className:\"filter-list\"}));});","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/ItemBuild/ItemPicker/FilterList.tsx"],"names":["React","useDispatch","itemFilters","general","consumable","item","relic","starter","offensive","power","stats","attackSpeed","lifesteal","penetration","percentPenetration","flatPenetration","defensive","physical","physicalProtections","magical","magicalProtections","health","hp5","ccr","crowdControlReduction","utility","aura","movement","cooldownReduction","mana","mp5","filterToComponent","dispatch","filterName","filter","type","payload","Object","entries","map"],"mappings":"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","sourcesContent":["import Item from \"../../../data_objects/Item\"\r\nimport React from \"react\";\r\nimport { Checkbox } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dispatch, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst itemFilters = {\r\n    general: {\r\n        consumable: (item: Item) => \"consumable\" in item,\r\n        relic: (item: Item) => \"relic\" in item,\r\n        starter: (item: Item) => \"starter\" in item,\r\n    },\r\n    offensive: {\r\n        power: (item: Item) => item.stats.power > 0,\r\n        \"attack speed\": (item: Item) => item.stats.attackSpeed > 0,\r\n        lifesteal: (item: Item) => item.stats.lifesteal > 0,\r\n        penetration: (item: Item) => item.stats.percentPenetration > 0 || item.stats.flatPenetration > 0,\r\n    },\r\n    defensive: {\r\n        physical: (item: Item) => item.stats.physicalProtections > 0,\r\n        magical: (item: Item) => item.stats.magicalProtections > 0,\r\n        health: (item: Item) => item.stats.health > 0,\r\n        hp5: (item: Item) => item.stats.hp5 > 0,\r\n        ccr: (item: Item) => item.stats.crowdControlReduction > 0\r\n    },\r\n    utility: {\r\n        aura: (item: Item) => \"aura\" in item,\r\n        movement: (item: Item) => item.stats.hp5 > 0,\r\n        'cooldown %': (item: Item) => item.stats.cooldownReduction > 0,\r\n        mana: (item: Item) => item.stats.mana > 0,\r\n        mp5: (item: Item) => item.stats.mp5 > 0,\r\n\r\n    }\r\n}\r\n\r\ntype ItemFilter = (item: Item) => boolean\r\nconst filterToComponent = ([filterName, filter]: [string, ItemFilter], dispatch: Dispatch<PayloadAction<ItemFilter>>) => {\r\n    return <div>\r\n        {filterName}\r\n        <input type=\"checkbox\" \r\n            onClick={() => dispatch({\r\n                type: 'itemPicker/toggleFilter', \r\n                payload: filter\r\n            })}>\r\n        </input>\r\n    </div>\r\n}\r\n\r\nexport default () => {\r\n    const dispatch: Dispatch<PayloadAction<ItemFilter>> = useDispatch();\r\n    \r\n    return <div className='filters'>\r\n        GENERAL\r\n        <ul className='filter-list'>\r\n            { Object.entries(itemFilters.general).map(filter => filterToComponent(filter, dispatch)) }\r\n        </ul>\r\n        OFFENSIVE\r\n        <ul className='filter-list'>\r\n\r\n        </ul>\r\n        DEFENSIVE\r\n        <ul className='filter-list'>\r\n\r\n        </ul>\r\n        UTILITY\r\n        <ul className='filter-list'>\r\n\r\n        </ul>\r\n    </div>\r\n};"]},"metadata":{},"sourceType":"module"}