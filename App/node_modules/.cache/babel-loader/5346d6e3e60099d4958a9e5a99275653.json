{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\src\\\\components\\\\ItemBuild\\\\AddItemButton\\\\AddItemButton.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { EmptySlot } from '@smite-timeline/smite-game-objects/lib/Item';\n\nconst mapDispatch = dispatch => {\n  return {\n    openItemPicker: slot => {\n      const action = {\n        type: 'itemPicker/openItemPicker',\n        payload: slot\n      };\n      dispatch(action);\n    }\n  };\n};\n\nconst mapState = (state, ownProps) => {\n  let buildItems = state[ownProps.side].items;\n  let index = 0;\n\n  for (index = buildItems.length - 1; index >= 0; index--) {\n    const current = buildItems[index];\n    if (current !== EmptySlot) break;\n  }\n\n  index++;\n  return {\n    nextItemIndex: index\n  };\n};\n\nconst AddItemButton = ({\n  side,\n  openItemPicker,\n  nextItemIndex\n}) => {\n  const open = () => openItemPicker({\n    buildID: side,\n    index: nextItemIndex\n  });\n\n  return /*#__PURE__*/React.createElement(\"img\", {\n    className: 'item-slot ' + side,\n    src: process.env.PUBLIC_URL + '/images/items/empty slot.png',\n    alt: 'Add an item to ' + side + ' build',\n    onClick: open,\n    role: \"button\",\n    \"aria-label\": \"item slot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  });\n};\n\nexport default connect(mapState, mapDispatch)(AddItemButton);","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/ItemBuild/AddItemButton/AddItemButton.tsx"],"names":["React","connect","EmptySlot","mapDispatch","dispatch","openItemPicker","slot","action","type","payload","mapState","state","ownProps","buildItems","side","items","index","length","current","nextItemIndex","AddItemButton","open","buildID","process","env","PUBLIC_URL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAGA,SAASC,SAAT,QAA0B,6CAA1B;;AAOA,MAAMC,WAAW,GAAIC,QAAD,IAAmB;AACnC,SAAO;AACHC,IAAAA,cAAc,EAAGC,IAAD,IAAgB;AAC5B,YAAMC,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,2BADK;AAEXC,QAAAA,OAAO,EAAEH;AAFE,OAAf;AAIAF,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACH;AAPE,GAAP;AASH,CAVD;;AAaA,MAAMG,QAAQ,GAAG,CAACC,KAAD,EAAmBC,QAAnB,KAAuC;AACpD,MAAIC,UAAU,GAAGF,KAAK,CAACC,QAAQ,CAACE,IAAV,CAAL,CAAqBC,KAAtC;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAKA,KAAK,GAAGH,UAAU,CAACI,MAAX,GAAoB,CAAjC,EAAoCD,KAAK,IAAI,CAA7C,EAAgDA,KAAK,EAArD,EAAyD;AACrD,UAAME,OAAO,GAAGL,UAAU,CAACG,KAAD,CAA1B;AACA,QAAIE,OAAO,KAAKhB,SAAhB,EAA2B;AAC9B;;AACDc,EAAAA,KAAK;AACL,SAAO;AAAEG,IAAAA,aAAa,EAAEH;AAAjB,GAAP;AAEH,CAVD;;AAYA,MAAMI,aAAa,GAAG,CAAC;AAAEN,EAAAA,IAAF;AAAQT,EAAAA,cAAR;AAAwBc,EAAAA;AAAxB,CAAD,KAAiF;AACnG,QAAME,IAAI,GAAG,MAAMhB,cAAc,CAAC;AAACiB,IAAAA,OAAO,EAAER,IAAV;AAAgBE,IAAAA,KAAK,EAAEG;AAAvB,GAAD,CAAjC;;AACA,sBAAQ;AACQ,IAAA,SAAS,EAAE,eAAeL,IADlC;AAEQ,IAAA,GAAG,EAAES,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,8BAFtC;AAGQ,IAAA,GAAG,EAAE,oBAAoBX,IAApB,GAA2B,QAHxC;AAIQ,IAAA,OAAO,EAAEO,IAJjB;AAKQ,IAAA,IAAI,EAAC,QALb;AAMQ,kBAAW,WANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAQH,CAVD;;AAcA,eAAepB,OAAO,CAACS,QAAD,EAAWP,WAAX,CAAP,CAA+BiB,aAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport { Slot } from '../../../redux/reducers/ItemPickerSlice';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../../../redux/store';\r\nimport buildIdentifier from \"../../../redux/buildIdentifier\";\r\nimport { EmptySlot } from '@smite-timeline/smite-game-objects/lib/Item';\r\n\r\ntype Props = {\r\n    side: buildIdentifier\r\n}\r\ntype DispatchProp = ReturnType<typeof mapDispatch>\r\n\r\nconst mapDispatch = (dispatch: any) => { \r\n    return {\r\n        openItemPicker: (slot: Slot) => { \r\n            const action = {\r\n                type: 'itemPicker/openItemPicker',\r\n                payload: slot\r\n            }\r\n            dispatch(action) \r\n        } \r\n    }\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapState>\r\nconst mapState = (state: RootState, ownProps: Props) => {\r\n    let buildItems = state[ownProps.side].items;\r\n    let index = 0;\r\n    for (index = buildItems.length - 1; index >= 0; index--) {\r\n        const current = buildItems[index];\r\n        if (current !== EmptySlot) break;\r\n    }\r\n    index++;\r\n    return { nextItemIndex: index}\r\n\r\n}\r\n\r\nconst AddItemButton = ({ side, openItemPicker, nextItemIndex }: Props & DispatchProp & StateProps) =>  {\r\n    const open = () => openItemPicker({buildID: side, index: nextItemIndex})\r\n    return (<img \r\n                    className={'item-slot ' + side }\r\n                    src={process.env.PUBLIC_URL + '/images/items/empty slot.png'} \r\n                    alt={'Add an item to ' + side + ' build'}\r\n                    onClick={open} \r\n                    role='button'\r\n                    aria-label='item slot'></img>\r\n            )\r\n}\r\n\r\n\r\n\r\nexport default connect(mapState, mapDispatch)(AddItemButton);"]},"metadata":{},"sourceType":"module"}