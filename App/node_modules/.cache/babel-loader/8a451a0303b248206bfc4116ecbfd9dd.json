{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\src\\\\components\\\\GodStats\\\\GodSelector.tsx\";\nimport React from 'react';\nimport GodProvider from '../../redux/GodProvider';\nimport buildIdentifier from \"../../redux/buildIdentifier\";\nimport { Dropdown, Menu, Button } from 'antd';\nimport MenuItem from 'antd/lib/menu/MenuItem';\nimport { connect } from 'react-redux';\nconst gods = GodProvider.getInstance();\n\nconst mapDispatch = dispatch => {\n  return {\n    pickGod: (key, buildIdentifier) => {\n      const name = gods.godNames[key];\n      const selectedGod = gods.getGod(name);\n\n      if (selectedGod) {\n        const action = {\n          type: buildIdentifier + '/godReducer',\n          payload: selectedGod\n        };\n        dispatch(action);\n      }\n    }\n  };\n};\n\nconst GodSelector = ({\n  buildIdentifier\n}) => {\n  const mapStateToProps = state => {\n    return {\n      image: state[buildIdentifier].god.image\n    };\n  };\n\n  const component = ({\n    image,\n    pickGod\n  }) => {\n    const onClick = ({\n      key\n    }) => pickGod(key, buildIdentifier);\n\n    const menu = /*#__PURE__*/React.createElement(Menu, {\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }\n    }, gods.godNames.map((name, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      \"aria-label\": 'select ' + name + ' ' + buildIdentifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 65\n      }\n    }, name)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"godSelection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      overlay: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"god-selection-menu\",\n      role: \"menu\",\n      \"aria-label\": \"left god selection dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Select God\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"the selected god\",\n      \"aria-label\": 'god image ' + buildIdentifier,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const ConnectedComponent = connect(mapStateToProps, mapDispatch)(component);\n  return /*#__PURE__*/React.createElement(ConnectedComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  });\n};\n\n_c = GodSelector;\nexport default GodSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"GodSelector\");","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/GodStats/GodSelector.tsx"],"names":["React","GodProvider","buildIdentifier","Dropdown","Menu","Button","MenuItem","connect","gods","getInstance","mapDispatch","dispatch","pickGod","key","name","godNames","selectedGod","getGod","action","type","payload","GodSelector","mapStateToProps","state","image","god","component","onClick","menu","map","index","ConnectedComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAuC,MAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAQA,MAAMC,IAAI,GAAGP,WAAW,CAACQ,WAAZ,EAAb;;AAEA,MAAMC,WAAW,GAAIC,QAAD,IAAmB;AACnC,SAAO;AACHC,IAAAA,OAAO,EAAE,CAACC,GAAD,EAAcX,eAAd,KAAmD;AAExD,YAAMY,IAAI,GAAGN,IAAI,CAACO,QAAL,CAAcF,GAAd,CAAb;AACA,YAAMG,WAAW,GAAGR,IAAI,CAACS,MAAL,CAAYH,IAAZ,CAApB;;AACA,UAAIE,WAAJ,EAAiB;AACb,cAAME,MAAM,GAAG;AACXC,UAAAA,IAAI,EAAEjB,eAAe,GAAG,aADb;AAEXkB,UAAAA,OAAO,EAAEJ;AAFE,SAAf;AAIAL,QAAAA,QAAQ,CAACO,MAAD,CAAR;AACH;AACJ;AAZE,GAAP;AAcH,CAfD;;AAkBA,MAAMG,WAAW,GAAG,CAAC;AAACnB,EAAAA;AAAD,CAAD,KAA8B;AAC9C,QAAMoB,eAAe,GAAIC,KAAD,IAAgB;AACpC,WAAO;AAACC,MAAAA,KAAK,EAAED,KAAK,CAACrB,eAAD,CAAL,CAAuBuB,GAAvB,CAA2BD;AAAnC,KAAP;AACH,GAFD;;AAIA,QAAME,SAAS,GAAG,CAAC;AAACF,IAAAA,KAAD;AAAQZ,IAAAA;AAAR,GAAD,KAAgD;AAC9D,UAAMe,OAAO,GAAG,CAAC;AAACd,MAAAA;AAAD,KAAD,KAAgBD,OAAO,CAACC,GAAD,EAAMX,eAAN,CAAvC;;AACA,UAAM0B,IAAI,gBAAI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAED,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACTnB,IAAI,CAACO,QAAL,CAAcc,GAAd,CAAkB,CAACf,IAAD,EAAegB,KAAf,kBAAiC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,oBAAY,YAAWhB,IAAX,GAAkB,GAAlB,GAAwBZ,eAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4EY,IAA5E,CAAnD,CADS,CAAd;AAIA,wBAAQ;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEc,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAuC,MAAA,IAAI,EAAC,MAA5C;AAAmD,oBAAW,6BAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADI,eAIJ;AAAK,MAAA,GAAG,EAAEJ,KAAV;AAAiB,MAAA,GAAG,EAAC,kBAArB;AAAwC,oBAAY,eAAetB,eAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJI,CAAR;AAMH,GAZD;;AAcA,QAAM6B,kBAAkB,GAAGxB,OAAO,CAACe,eAAD,EAAkBZ,WAAlB,CAAP,CAAsCgB,SAAtC,CAA3B;AACA,sBAAO,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CArBD;;KAAML,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport GodProvider from '../../redux/GodProvider'\r\nimport buildIdentifier from \"../../redux/buildIdentifier\"\r\nimport { Dropdown, Menu, Button } from 'antd'\r\nimport MenuItem from 'antd/lib/menu/MenuItem'\r\nimport { connect } from 'react-redux'\r\n\r\ntype Props = { buildIdentifier: buildIdentifier }\r\n\r\ntype DispatchProp = { pickGod: (key: number, buildIdentifier: buildIdentifier) => void }\r\n\r\ntype stateProp = { image: string }\r\n\r\nconst gods = GodProvider.getInstance();\r\n\r\nconst mapDispatch = (dispatch: any) => {\r\n    return {\r\n        pickGod: (key: number, buildIdentifier: buildIdentifier) => {\r\n            \r\n            const name = gods.godNames[key];\r\n            const selectedGod = gods.getGod(name);\r\n            if (selectedGod) {\r\n                const action = {\r\n                    type: buildIdentifier + '/godReducer',\r\n                    payload: selectedGod\r\n                }\r\n                dispatch(action);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst GodSelector = ({buildIdentifier}: Props) => {\r\n    const mapStateToProps = (state: any) => {\r\n        return {image: state[buildIdentifier].god.image}\r\n    }\r\n    \r\n    const component = ({image, pickGod}: stateProp & DispatchProp) => {\r\n        const onClick = ({key}: any) => pickGod(key, buildIdentifier)\r\n        const menu =  <Menu onClick={onClick}>\r\n            {gods.godNames.map((name: string, index: number) => <MenuItem key={index} aria-label={'select '+ name + ' ' + buildIdentifier}>{name}</MenuItem>)}\r\n        </Menu>\r\n        \r\n        return (<div className=\"godSelection\">\r\n            <Dropdown overlay={menu}>\r\n                <Button className='god-selection-menu' role='menu' aria-label='left god selection dropdown'>Select God</Button>\r\n            </Dropdown>\r\n            <img src={image} alt='the selected god' aria-label={'god image ' + buildIdentifier} ></img>\r\n        </div>)\r\n    }\r\n\r\n    const ConnectedComponent = connect(mapStateToProps, mapDispatch)(component);\r\n    return <ConnectedComponent></ConnectedComponent>\r\n}\r\n\r\nexport default GodSelector;"]},"metadata":{},"sourceType":"module"}