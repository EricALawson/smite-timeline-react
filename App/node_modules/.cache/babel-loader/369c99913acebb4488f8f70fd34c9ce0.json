{"ast":null,"code":"import _toConsumableArray from\"C:/Users/erica/Documents/repos/JavaScript/smite-timeline/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import ItemSlot from\"../ItemBuild/ItemSlot/ItemSlot\";import\"./SliderEventGroup.css\";import buildIdentifier from\"../../redux/buildIdentifier\";var Spacer=function Spacer(){return/*#__PURE__*/React.createElement(\"div\",{className:\"level-spacer\"});};var orderEventsByType=function orderEventsByType(events,side){var ordered=[];if(events.filter(function(event){return event.type==='level'&&event.slot.buildID===side;}).length===0){ordered.push(/*#__PURE__*/React.createElement(Spacer,null));}else{var levelEvents=events.filter(function(event){return event.slot.buildID===side&&event.type==='level';}).map(function(event){return/*#__PURE__*/React.createElement(\"div\",{className:\"level-event\"},event.level);});ordered.push.apply(ordered,_toConsumableArray(levelEvents));}var itemEvents=events.filter(function(event){return event.slot.buildID===side&&event.type==='item finished';}).map(function(event){return/*#__PURE__*/React.createElement(ItemSlot,{key:event.slot.index,item:event.item,slot:event.slot});});ordered.push.apply(ordered,_toConsumableArray(itemEvents));return ordered;};var SliderEventGroup=function SliderEventGroup(_ref){var events=_ref.events;return/*#__PURE__*/React.createElement(\"div\",{className:'event-group'},/*#__PURE__*/React.createElement(\"div\",{className:\"left event-group-side\"},orderEventsByType(events,buildIdentifier.left)),/*#__PURE__*/React.createElement(\"div\",{className:\"right event-group-side\"},orderEventsByType(events,buildIdentifier.right)));};export default SliderEventGroup;","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/TimelineSlider/SliderEventGroup.tsx"],"names":["React","ItemSlot","buildIdentifier","Spacer","orderEventsByType","events","side","ordered","filter","event","type","slot","buildID","length","push","levelEvents","map","level","itemEvents","index","item","SliderEventGroup","left","right"],"mappings":"uLACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,sBAAM,2BAAK,SAAS,CAAC,cAAf,EAAN,EAAf,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAAuBC,IAAvB,CAAkD,CACxE,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIF,MAAM,CAACG,MAAP,CAAc,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,GAAe,OAAf,EAA0BD,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAuBN,IAArD,EAAnB,EAA8EO,MAA9E,GAAyF,CAA7F,CAAiG,CAC7FN,OAAO,CAACO,IAAR,cAAa,oBAAC,MAAD,MAAb,EACH,CAFD,IAEO,CACH,GAAIC,CAAAA,WAAW,CAAGV,MAAM,CAACG,MAAP,CAAc,SAACC,KAAD,QAAgCA,CAAAA,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAuBN,IAAvB,EAA+BG,KAAK,CAACC,IAAN,GAAe,OAA9E,EAAd,EACGM,GADH,CACO,SAAAP,KAAK,qBAAI,2BAAK,SAAS,CAAC,aAAf,EAA8BA,KAAK,CAACQ,KAApC,CAAJ,EADZ,CAAlB,CAEAV,OAAO,CAACO,IAAR,OAAAP,OAAO,oBAASQ,WAAT,EAAP,CACH,CACD,GAAIG,CAAAA,UAAU,CAAGb,MAAM,CAACG,MAAP,CAAc,SAACC,KAAD,QAA+BA,CAAAA,KAAK,CAACE,IAAN,CAAWC,OAAX,GAAuBN,IAAvB,EAA+BG,KAAK,CAACC,IAAN,GAAe,eAA7E,EAAd,EACQM,GADR,CACY,SAAAP,KAAK,qBAAI,oBAAC,QAAD,EAAU,GAAG,CAAEA,KAAK,CAACE,IAAN,CAAWQ,KAA1B,CAAiC,IAAI,CAAEV,KAAK,CAACW,IAA7C,CAAmD,IAAI,CAAEX,KAAK,CAACE,IAA/D,EAAJ,EADjB,CAAjB,CAEAJ,OAAO,CAACO,IAAR,OAAAP,OAAO,oBAASW,UAAT,EAAP,CACA,MAAOX,CAAAA,OAAP,CACH,CAbD,CAgBA,GAAMc,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAsB,IAAnBhB,CAAAA,MAAmB,MAAnBA,MAAmB,CAC3C,mBAAQ,2BAAK,SAAS,CAAE,aAAhB,eACJ,2BAAK,SAAS,CAAC,uBAAf,EACKD,iBAAiB,CAACC,MAAD,CAASH,eAAe,CAACoB,IAAzB,CADtB,CADI,cAIJ,2BAAK,SAAS,CAAC,wBAAf,EACKlB,iBAAiB,CAACC,MAAD,CAASH,eAAe,CAACqB,KAAzB,CADtB,CAJI,CAAR,CAQH,CATD,CAWA,cAAeF,CAAAA,gBAAf","sourcesContent":["import { BuildEvent, ItemEvent, LevelEvent } from \"../../redux/selectors/StatsSelector\";\r\nimport React from \"react\";\r\nimport ItemSlot from \"../ItemBuild/ItemSlot/ItemSlot\";\r\nimport \"./SliderEventGroup.css\";\r\nimport buildIdentifier from \"../../redux/buildIdentifier\";\r\n\r\ntype Props = {\r\n    events: BuildEvent[]\r\n}\r\nconst Spacer = () => <div className='level-spacer'></div>\r\n\r\nconst orderEventsByType = (events: BuildEvent[], side: buildIdentifier)  => {\r\n    let ordered = [];\r\n    if (events.filter(event => event.type === 'level' && event.slot.buildID === side).length === 0)  {\r\n        ordered.push(<Spacer></Spacer>);\r\n    } else {\r\n        let levelEvents = events.filter((event): event is LevelEvent => event.slot.buildID === side && event.type === 'level')\r\n                            .map(event => <div className='level-event'>{event.level}</div>)\r\n        ordered.push(...levelEvents);\r\n    }\r\n    let itemEvents = events.filter((event): event is ItemEvent => event.slot.buildID === side && event.type === 'item finished')\r\n                            .map(event => <ItemSlot key={event.slot.index} item={event.item} slot={event.slot}></ItemSlot>)\r\n    ordered.push(...itemEvents);\r\n    return ordered;\r\n}\r\n\r\n\r\nconst SliderEventGroup = ({ events}: Props) => {\r\n    return (<div className={'event-group'}>\r\n        <div className='left event-group-side'>\r\n            {orderEventsByType(events, buildIdentifier.left)}\r\n        </div>\r\n        <div className='right event-group-side'>\r\n            {orderEventsByType(events, buildIdentifier.right)}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default SliderEventGroup;"]},"metadata":{},"sourceType":"module"}