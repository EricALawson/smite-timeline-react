{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\App\\\\src\\\\components\\\\TimelineSlider\\\\TimelineSlider.tsx\";\nimport React from 'react';\nimport './TimelineSlider.css';\nimport { connect } from 'react-redux';\nimport { Slider } from 'antd';\nimport { createAction } from '@reduxjs/toolkit';\nimport buildIdentifier from \"../../redux/buildIdentifier\";\nimport makeStatsSelector from '../../redux/selectors/StatsSelector';\nimport AddItemButton from '../ItemBuild/AddItemButton/AddItemButton';\nimport SliderEventGroup from './SliderEventGroup';\nimport SliderTooltip from './SliderTooltip';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeTime: value => {\n      if (typeof value === 'number') {\n        dispatch(createAction('setTime')(value));\n      }\n    }\n  };\n};\n\nconst mapState = state => {\n  const leftEvents = makeStatsSelector(buildIdentifier.left)(state.left);\n  const rightEvents = makeStatsSelector(buildIdentifier.right)(state.right);\n  const timeRange = leftEvents[leftEvents.length - 1] > rightEvents[rightEvents.length - 1] ? leftEvents[leftEvents.length - 1].time : rightEvents[rightEvents.length - 1].time;\n  return {\n    leftEvents: leftEvents,\n    rightEvents: rightEvents,\n    timeRange: timeRange\n  };\n};\n\nconst Spacer = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"level-spacer\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 22\n  }\n});\n\nfunction TimelineSlider({\n  changeTime,\n  leftEvents,\n  rightEvents,\n  timeRange\n}) {\n  const marks = {};\n  const timeMap = new Map();\n  leftEvents.concat(rightEvents).forEach(event => {\n    const otherEvents = timeMap.get(event.time);\n\n    if (!otherEvents) {\n      timeMap.set(event.time, [event]);\n    } else {\n      timeMap.set(event.time, [...otherEvents, event]);\n    }\n  });\n  timeMap.forEach(eventList => {\n    marks[eventList[0].time] = /*#__PURE__*/React.createElement(SliderEventGroup, {\n      events: eventList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }\n    });\n  });\n  marks[timeRange + 90] = {\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"event-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left event-group-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Spacer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AddItemButton, {\n      side: buildIdentifier.left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right event-group-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Spacer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AddItemButton, {\n      side: buildIdentifier.right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    })))\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slidercontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 0,\n    min: 0,\n    max: timeRange + 60,\n    step: 5,\n    vertical: true,\n    reverse: true,\n    onChange: changeTime,\n    marks: marks //tooltipVisible={true} disabled until I figure out how to make the tooltip display under the ItemPicker.\n    ,\n    tooltipPlacement: \"top\",\n    tipFormatter: SliderTooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default connect(mapState, mapDispatchToProps)(TimelineSlider);","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/App/src/components/TimelineSlider/TimelineSlider.tsx"],"names":["React","connect","Slider","createAction","buildIdentifier","makeStatsSelector","AddItemButton","SliderEventGroup","SliderTooltip","mapDispatchToProps","dispatch","changeTime","value","mapState","state","leftEvents","left","rightEvents","right","timeRange","length","time","Spacer","TimelineSlider","marks","timeMap","Map","concat","forEach","event","otherEvents","get","set","eventList","label"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './TimelineSlider.css';\r\nimport { connect } from 'react-redux';\r\nimport {Slider} from 'antd';\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { SliderMarks } from 'antd/lib/slider';\r\nimport { RootState } from '../../redux/store';\r\nimport buildIdentifier from \"../../redux/buildIdentifier\";\r\nimport makeStatsSelector, { BuildEvent } from '../../redux/selectors/StatsSelector';\r\nimport AddItemButton from '../ItemBuild/AddItemButton/AddItemButton';\r\nimport SliderEventGroup from './SliderEventGroup';\r\nimport SliderTooltip from './SliderTooltip';\r\n\r\n\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        changeTime: (value: number) => {\r\n            if (typeof value === 'number') {\r\n                dispatch( createAction<number>('setTime')(value) );\r\n            }\r\n        }\r\n    }  \r\n}\r\n\r\ntype StateProps = ReturnType<typeof mapState>\r\nconst mapState = (state: RootState) => {\r\n    const leftEvents = makeStatsSelector(buildIdentifier.left)(state.left);\r\n    const rightEvents = makeStatsSelector(buildIdentifier.right)(state.right);\r\n    const timeRange = leftEvents[leftEvents.length -1] > rightEvents[rightEvents.length -1]\r\n                        ? leftEvents[leftEvents.length -1].time\r\n                        : rightEvents[rightEvents.length -1].time;\r\n    return {\r\n        leftEvents: leftEvents,\r\n        rightEvents: rightEvents,\r\n        timeRange: timeRange\r\n    }\r\n}\r\n\r\nconst Spacer = () => <div className='level-spacer'></div>\r\n\r\nfunction TimelineSlider({changeTime, leftEvents, rightEvents, timeRange}: DispatchProps & StateProps) {\r\n    const marks: SliderMarks = {};\r\n    const timeMap: Map<number, BuildEvent[]> = new Map();\r\n    leftEvents.concat(rightEvents).forEach((event: BuildEvent) => {\r\n        const otherEvents = timeMap.get(event.time);\r\n        if( !otherEvents) {\r\n            timeMap.set(event.time, [ event ])\r\n        } else {\r\n            timeMap.set(event.time, [...otherEvents, event ]);\r\n        }\r\n    });\r\n    timeMap.forEach(eventList => {\r\n        marks[eventList[0].time] = <SliderEventGroup events={eventList}></SliderEventGroup>\r\n    });\r\n    marks[timeRange + 90] = {\r\n        label: <div className='event-group'>\r\n                <div className='left event-group-side'>\r\n                    <Spacer></Spacer>\r\n                    <AddItemButton side={buildIdentifier.left}></AddItemButton>\r\n                </div>\r\n                <div className='right event-group-side'>\r\n                    <Spacer></Spacer>\r\n                    <AddItemButton side={buildIdentifier.right}></AddItemButton>\r\n                </div>\r\n            </div>\r\n    }\r\n\r\n    return <div className=\"slidercontainer\">\r\n        <Slider\r\n            defaultValue={0}\r\n            min={0}\r\n            max={timeRange + 60}\r\n            step={5}\r\n            vertical={true}\r\n            reverse={true}\r\n            onChange={changeTime}\r\n            marks={marks}\r\n            //tooltipVisible={true} disabled until I figure out how to make the tooltip display under the ItemPicker.\r\n            tooltipPlacement='top'\r\n            tipFormatter={SliderTooltip}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default connect(\r\n    mapState, \r\n    mapDispatchToProps\r\n    )\r\n    (TimelineSlider);"]},"metadata":{},"sourceType":"module"}