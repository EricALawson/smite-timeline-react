{"ast":null,"code":"export function KillTiming(){return{startingGold:1500,waveStartTime:30,waveRespawnTime:30,jungleStartTime:30,jungleRespawnTime:120,goldPerSecond:3};}export function getLevelTimes(killTiming){var time=0;var xp=0;var level=0;//don't bother adjusting for array indexing until we display the level.\nvar times=[];while(times.length<20){if(xp>=xpForLevel[level]){times.push(time);level++;}time++;if((time-killTiming.waveStartTime)%killTiming.waveRespawnTime===0){xp+=minions.waveMelee.xp*3+minions.waveArcher.xp*3;}if((time-killTiming.jungleStartTime)%killTiming.jungleRespawnTime===0){xp+=minions.jungleBuffMinion.xp*2+minions.jungleBuffHolder.xp;}}return times;}export function getTimeForGold(killTiming,goldTarget){var gold=killTiming.startingGold;var time=0;while(gold<goldTarget){time++;gold+=killTiming.goldPerSecond;if((time-killTiming.waveStartTime)%killTiming.waveRespawnTime===0){gold+=minions.waveMelee.gold*3+minions.waveArcher.gold*3;}if((time-killTiming.jungleStartTime)%killTiming.jungleRespawnTime===0){gold+=minions.jungleBuffMinion.gold*2+minions.jungleBuffHolder.gold;}//console.log(\"time: \" + time + \" gold: \" + gold);\n}return time;}export function getTimeForKills(killTiming,killTarget){var time=0;var kills=0;while(kills<killTarget){if((time-killTiming.waveStartTime)%killTiming.waveRespawnTime===0){kills+=6;}if((time-killTiming.jungleStartTime)%killTiming.jungleRespawnTime===0){kills+=3;}}return time;}var xpForLevel=[0,308,671,1089,1562,2090,2673,3311,4004,4752,5555,6413,7326,8294,9317,10395,11528,12716,13959,15257];var minions={waveMelee:{xp:45,gold:25},waveArcher:{xp:25,gold:18},jungleBuffMinion:{xp:16,gold:20},jungleBuffHolder:{xp:116,gold:48},jungleHarpy:{xp:22,gold:22},jungleElderHarpy:{xp:30,gold:34},jungleAlphaHarpy:{xp:35,gold:50}};export default KillTiming;","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/App/src/data_objects/KillTiming.ts"],"names":["KillTiming","startingGold","waveStartTime","waveRespawnTime","jungleStartTime","jungleRespawnTime","goldPerSecond","getLevelTimes","killTiming","time","xp","level","times","length","xpForLevel","push","minions","waveMelee","waveArcher","jungleBuffMinion","jungleBuffHolder","getTimeForGold","goldTarget","gold","getTimeForKills","killTarget","kills","jungleHarpy","jungleElderHarpy","jungleAlphaHarpy"],"mappings":"AAWA,MAAO,SAASA,CAAAA,UAAT,EAAkC,CACrC,MAAO,CACHC,YAAY,CAAE,IADX,CAEHC,aAAa,CAAE,EAFZ,CAGHC,eAAe,CAAE,EAHd,CAIHC,eAAe,CAAE,EAJd,CAKHC,iBAAiB,CAAE,GALhB,CAMHC,aAAa,CAAE,CANZ,CAAP,CAQH,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBC,UAAvB,CAAyD,CAC5D,GAAIC,CAAAA,IAAI,CAAG,CAAX,CACA,GAAIC,CAAAA,EAAE,CAAG,CAAT,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CAAe;AACf,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,MAAMA,KAAK,CAACC,MAAN,CAAe,EAArB,CAAyB,CACrB,GAAGH,EAAE,EAAII,UAAU,CAACH,KAAD,CAAnB,CAA4B,CACxBC,KAAK,CAACG,IAAN,CAAWN,IAAX,EACAE,KAAK,GACR,CAEDF,IAAI,GAEJ,GAAG,CAACA,IAAI,CAAGD,UAAU,CAACN,aAAnB,EAAoCM,UAAU,CAACL,eAA/C,GAAmE,CAAtE,CAAyE,CACrEO,EAAE,EAAIM,OAAO,CAACC,SAAR,CAAkBP,EAAlB,CAAuB,CAAvB,CAA2BM,OAAO,CAACE,UAAR,CAAmBR,EAAnB,CAAwB,CAAzD,CACH,CAED,GAAG,CAACD,IAAI,CAAGD,UAAU,CAACJ,eAAnB,EAAsCI,UAAU,CAACH,iBAAjD,GAAuE,CAA1E,CAA6E,CACzEK,EAAE,EAAIM,OAAO,CAACG,gBAAR,CAAyBT,EAAzB,CAA8B,CAA9B,CAAkCM,OAAO,CAACI,gBAAR,CAAyBV,EAAjE,CACH,CACJ,CACD,MAAOE,CAAAA,KAAP,CACH,CAED,MAAO,SAASS,CAAAA,cAAT,CAAwBb,UAAxB,CAAgDc,UAAhD,CAA4E,CAC/E,GAAIC,CAAAA,IAAI,CAAGf,UAAU,CAACP,YAAtB,CACA,GAAIQ,CAAAA,IAAI,CAAG,CAAX,CACA,MAAOc,IAAI,CAAGD,UAAd,CAA0B,CACtBb,IAAI,GAEJc,IAAI,EAAIf,UAAU,CAACF,aAAnB,CAEA,GAAG,CAACG,IAAI,CAAGD,UAAU,CAACN,aAAnB,EAAoCM,UAAU,CAACL,eAA/C,GAAmE,CAAtE,CAAyE,CACrEoB,IAAI,EAAIP,OAAO,CAACC,SAAR,CAAkBM,IAAlB,CAAyB,CAAzB,CAA6BP,OAAO,CAACE,UAAR,CAAmBK,IAAnB,CAA0B,CAA/D,CACH,CAED,GAAG,CAACd,IAAI,CAAGD,UAAU,CAACJ,eAAnB,EAAsCI,UAAU,CAACH,iBAAjD,GAAuE,CAA1E,CAA6E,CACzEkB,IAAI,EAAIP,OAAO,CAACG,gBAAR,CAAyBI,IAAzB,CAAgC,CAAhC,CAAoCP,OAAO,CAACI,gBAAR,CAAyBG,IAArE,CACH,CACD;AACH,CACD,MAAOd,CAAAA,IAAP,CACH,CAED,MAAO,SAASe,CAAAA,eAAT,CAAyBhB,UAAzB,CAAiDiB,UAAjD,CAAqE,CACxE,GAAIhB,CAAAA,IAAI,CAAG,CAAX,CACA,GAAIiB,CAAAA,KAAK,CAAG,CAAZ,CACA,MAAOA,KAAK,CAAGD,UAAf,CAA2B,CACvB,GAAG,CAAChB,IAAI,CAAGD,UAAU,CAACN,aAAnB,EAAoCM,UAAU,CAACL,eAA/C,GAAmE,CAAtE,CAAyE,CACrEuB,KAAK,EAAI,CAAT,CACH,CAED,GAAG,CAACjB,IAAI,CAAGD,UAAU,CAACJ,eAAnB,EAAsCI,UAAU,CAACH,iBAAjD,GAAuE,CAA1E,CAA6E,CACzEqB,KAAK,EAAI,CAAT,CACH,CACJ,CAED,MAAOjB,CAAAA,IAAP,CACH,CAGD,GAAMK,CAAAA,UAAU,CAAG,CACf,CADe,CAEf,GAFe,CAGf,GAHe,CAIf,IAJe,CAKf,IALe,CAMf,IANe,CAOf,IAPe,CAQf,IARe,CASf,IATe,CAUf,IAVe,CAWf,IAXe,CAYf,IAZe,CAaf,IAbe,CAcf,IAde,CAef,IAfe,CAgBf,KAhBe,CAiBf,KAjBe,CAkBf,KAlBe,CAmBf,KAnBe,CAoBf,KApBe,CAAnB,CAuBA,GAAME,CAAAA,OAAO,CAAG,CAEZC,SAAS,CAAE,CACPP,EAAE,CAAE,EADG,CAEPa,IAAI,CAAE,EAFC,CAFC,CAMZL,UAAU,CAAG,CACTR,EAAE,CAAE,EADK,CAETa,IAAI,CAAE,EAFG,CAND,CAUZJ,gBAAgB,CAAG,CACfT,EAAE,CAAE,EADW,CAEfa,IAAI,CAAE,EAFS,CAVP,CAcZH,gBAAgB,CAAG,CACfV,EAAE,CAAE,GADW,CAEfa,IAAI,CAAE,EAFS,CAdP,CAkBZI,WAAW,CAAG,CACVjB,EAAE,CAAE,EADM,CAEVa,IAAI,CAAE,EAFI,CAlBF,CAsBZK,gBAAgB,CAAE,CACdlB,EAAE,CAAE,EADU,CAEda,IAAI,CAAE,EAFQ,CAtBN,CA0BZM,gBAAgB,CAAE,CACdnB,EAAE,CAAE,EADU,CAEda,IAAI,CAAE,EAFQ,CA1BN,CAAhB,CAgCA,cAAevB,CAAAA,UAAf","sourcesContent":["\r\n\r\nexport interface KillTiming {\r\n    startingGold: number;\r\n    waveStartTime: number;\r\n    waveRespawnTime: number;\r\n    jungleStartTime: number;\r\n    jungleRespawnTime: number;\r\n    goldPerSecond: number;\r\n}\r\n\r\nexport function KillTiming(): KillTiming {\r\n    return {\r\n        startingGold: 1500,\r\n        waveStartTime: 30,\r\n        waveRespawnTime: 30,\r\n        jungleStartTime: 30,\r\n        jungleRespawnTime: 120,\r\n        goldPerSecond: 3\r\n    }\r\n}\r\n    \r\nexport function getLevelTimes(killTiming: KillTiming): number[] {\r\n    let time = 0;\r\n    let xp = 0;\r\n    let level = 0; //don't bother adjusting for array indexing until we display the level.\r\n    var times = [];\r\n    while(times.length < 20) {\r\n        if(xp >= xpForLevel[level]) {\r\n            times.push(time);\r\n            level++;\r\n        }\r\n\r\n        time++;\r\n\r\n        if((time - killTiming.waveStartTime) % killTiming.waveRespawnTime === 0) {\r\n            xp += minions.waveMelee.xp * 3 + minions.waveArcher.xp * 3;\r\n        }\r\n\r\n        if((time - killTiming.jungleStartTime) % killTiming.jungleRespawnTime === 0) {\r\n            xp += minions.jungleBuffMinion.xp * 2 + minions.jungleBuffHolder.xp;\r\n        }\r\n    }\r\n    return times;\r\n}\r\n\r\nexport function getTimeForGold(killTiming: KillTiming, goldTarget: number): number {\r\n    let gold = killTiming.startingGold;\r\n    let time = 0;\r\n    while (gold < goldTarget) {\r\n        time++;\r\n\r\n        gold += killTiming.goldPerSecond;\r\n\r\n        if((time - killTiming.waveStartTime) % killTiming.waveRespawnTime === 0) {\r\n            gold += minions.waveMelee.gold * 3 + minions.waveArcher.gold * 3;\r\n        }\r\n\r\n        if((time - killTiming.jungleStartTime) % killTiming.jungleRespawnTime === 0) {\r\n            gold += minions.jungleBuffMinion.gold * 2 + minions.jungleBuffHolder.gold;\r\n        }\r\n        //console.log(\"time: \" + time + \" gold: \" + gold);\r\n    }\r\n    return time;\r\n}\r\n\r\nexport function getTimeForKills(killTiming: KillTiming, killTarget: number) {\r\n    let time = 0;\r\n    let kills = 0;\r\n    while (kills < killTarget) {\r\n        if((time - killTiming.waveStartTime) % killTiming.waveRespawnTime === 0) {\r\n            kills += 6;\r\n        }\r\n\r\n        if((time - killTiming.jungleStartTime) % killTiming.jungleRespawnTime === 0) {\r\n            kills += 3;\r\n        }\r\n    }\r\n\r\n    return time;\r\n}\r\n\r\n\r\nconst xpForLevel = [\r\n    0,\r\n    308,\r\n    671,\r\n    1089,\r\n    1562,\r\n    2090,\r\n    2673,\r\n    3311,\r\n    4004,\r\n    4752,\r\n    5555,\r\n    6413,\r\n    7326,\r\n    8294,\r\n    9317,\r\n    10395,\r\n    11528,\r\n    12716,\r\n    13959,\r\n    15257\r\n]\r\n\r\nconst minions = {\r\n\r\n    waveMelee: {\r\n        xp: 45,\r\n        gold: 25\r\n    },\r\n    waveArcher : {\r\n        xp: 25,\r\n        gold: 18\r\n    },\r\n    jungleBuffMinion : {\r\n        xp: 16,\r\n        gold: 20\r\n    },\r\n    jungleBuffHolder : {\r\n        xp: 116,\r\n        gold: 48\r\n    },\r\n    jungleHarpy : {\r\n        xp: 22,\r\n        gold: 22\r\n    },\r\n    jungleElderHarpy: {\r\n        xp: 30,\r\n        gold: 34\r\n    },\r\n    jungleAlphaHarpy: {\r\n        xp: 35,\r\n        gold: 50\r\n    }\r\n}\r\n\r\nexport default KillTiming;"]},"metadata":{},"sourceType":"module"}