{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport buildIdentifier from \"../buildIdentifier\";\nimport { EmptySlot } from \"../../data_objects/Item\";\nconst itemPicker = createSlice({\n  name: 'itemPicker',\n  initialState: {\n    isOpen: false,\n    slot: {\n      buildID: buildIdentifier.left,\n      index: 0\n    },\n    selected: EmptySlot,\n    activeFilters: []\n  },\n  reducers: {\n    closeItemPicker: (state, action) => {\n      let newState = Object.assign({}, state);\n      newState.isOpen = false;\n      newState.selected = EmptySlot;\n      return newState;\n    },\n    openItemPicker: (state, action) => {\n      let newState = Object.assign({}, state);\n      newState.slot = action.payload;\n      newState.isOpen = true;\n      return newState;\n    },\n    setSelected: (state, action) => {\n      let newState = Object.assign({}, state);\n      newState.selected = action.payload;\n      return newState;\n    },\n    toggleFilter: (state, action) => {\n      state.activeFilters.forEach(filter => console.log(filter));\n      let index = state.activeFilters.findIndex(filter => filter === action.payload); //let index = 0;\n\n      if (index > -1) {\n        state.activeFilters.splice(index, 1);\n      } else {\n        state.activeFilters.push(action.payload);\n      }\n    }\n  }\n});\nconst closeItemPicker = itemPicker.actions.closeItemPicker;\nconst openItemPicker = itemPicker.actions.openItemPicker;\nexport { closeItemPicker, openItemPicker };\nexport default itemPicker;","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/redux/reducers/ItemPickerSlice.ts"],"names":["createSlice","buildIdentifier","EmptySlot","itemPicker","name","initialState","isOpen","slot","buildID","left","index","selected","activeFilters","reducers","closeItemPicker","state","action","newState","Object","assign","openItemPicker","payload","setSelected","toggleFilter","forEach","filter","console","log","findIndex","splice","push","actions"],"mappings":"AAAA,SAASA,WAAT,QAAmD,kBAAnD;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAAeC,SAAf,QAAgC,yBAAhC;AAoBA,MAAMC,UAAU,GAAGH,WAAW,CAAC;AAC3BI,EAAAA,IAAI,EAAE,YADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,KADE;AAEVC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAEP,eAAe,CAACQ,IADvB;AAEFC,MAAAA,KAAK,EAAE;AAFL,KAFI;AAMVC,IAAAA,QAAQ,EAAET,SANA;AAOVU,IAAAA,aAAa,EAAE;AAPL,GAFa;AAW3BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,EAAE,CAACC,KAAD,EAAyBC,MAAzB,KAA4C;AACzD,UAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAf;AACAE,MAAAA,QAAQ,CAACX,MAAT,GAAkB,KAAlB;AACAW,MAAAA,QAAQ,CAACN,QAAT,GAAoBT,SAApB;AACA,aAAOe,QAAP;AACH,KANK;AAONG,IAAAA,cAAc,EAAE,CAACL,KAAD,EAAyBC,MAAzB,KAAyD;AACrE,UAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAf;AACAE,MAAAA,QAAQ,CAACV,IAAT,GAAgBS,MAAM,CAACK,OAAvB;AACAJ,MAAAA,QAAQ,CAACX,MAAT,GAAkB,IAAlB;AACA,aAAOW,QAAP;AACH,KAZK;AAaNK,IAAAA,WAAW,EAAE,CAACP,KAAD,EAAyBC,MAAzB,KAAyD;AAClE,UAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAf;AACAE,MAAAA,QAAQ,CAACN,QAAT,GAAoBK,MAAM,CAACK,OAA3B;AACA,aAAOJ,QAAP;AACH,KAjBK;AAkBNM,IAAAA,YAAY,EAAE,CAACR,KAAD,EAAyBC,MAAzB,KAA+D;AACzED,MAAAA,KAAK,CAACH,aAAN,CAAoBY,OAApB,CAA4BC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAtC;AACA,UAAIf,KAAK,GAAGK,KAAK,CAACH,aAAN,CAAoBgB,SAApB,CAA8BH,MAAM,IAAIA,MAAM,KAAKT,MAAM,CAACK,OAA1D,CAAZ,CAFyE,CAGzE;;AACA,UAAIX,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZK,QAAAA,KAAK,CAACH,aAAN,CAAoBiB,MAApB,CAA2BnB,KAA3B,EAAkC,CAAlC;AACH,OAFD,MAEO;AACHK,QAAAA,KAAK,CAACH,aAAN,CAAoBkB,IAApB,CAAyBd,MAAM,CAACK,OAAhC;AACH;AAEJ;AA5BK;AAXiB,CAAD,CAA9B;AA2CA,MAAMP,eAAe,GAAGX,UAAU,CAAC4B,OAAX,CAAmBjB,eAA3C;AACA,MAAMM,cAAc,GAAGjB,UAAU,CAAC4B,OAAX,CAAmBX,cAA1C;AAEA,SAAQN,eAAR,EAAyBM,cAAzB;AAEA,eAAejB,UAAf","sourcesContent":["import { createSlice, Action, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport buildIdentifier from \"../buildIdentifier\";\r\nimport Item, { EmptySlot } from \"../../data_objects/Item\";\r\nimport { FilterName } from \"../../components/ItemBuild/ItemPicker/FilterList\";\r\n\r\ntype Slot = {\r\n    buildID: buildIdentifier,\r\n    index: number\r\n}\r\n\r\nexport type {Slot};\r\n\r\ntype ItemFilter = (item: Item) => boolean\r\n\r\ntype ItemPickerState = {\r\n    isOpen: boolean,\r\n    slot: Slot,\r\n    selected: Item,\r\n    activeFilters: FilterName[]\r\n}\r\n\r\n\r\nconst itemPicker = createSlice({\r\n    name: 'itemPicker',\r\n    initialState: {\r\n        isOpen: false,\r\n        slot: {\r\n            buildID: buildIdentifier.left,\r\n            index: 0\r\n        },\r\n        selected: EmptySlot,\r\n        activeFilters: [] as FilterName[],\r\n    },\r\n    reducers: {\r\n        closeItemPicker: (state: ItemPickerState, action: Action) => {\r\n            let newState = Object.assign({}, state)\r\n            newState.isOpen = false;\r\n            newState.selected = EmptySlot;\r\n            return newState;\r\n        },\r\n        openItemPicker: (state: ItemPickerState, action: PayloadAction<Slot>) => {\r\n            let newState = Object.assign({}, state)\r\n            newState.slot = action.payload\r\n            newState.isOpen = true;\r\n            return newState;\r\n        },\r\n        setSelected: (state: ItemPickerState, action: PayloadAction<Item>) => {\r\n            let newState = Object.assign({}, state)\r\n            newState.selected = action.payload;\r\n            return newState;\r\n        },\r\n        toggleFilter: (state: ItemPickerState, action: PayloadAction<FilterName>) => {\r\n            state.activeFilters.forEach(filter => console.log(filter));\r\n            let index = state.activeFilters.findIndex(filter => filter === action.payload);\r\n            //let index = 0;\r\n            if (index > -1) {\r\n                state.activeFilters.splice(index, 1);\r\n            } else {\r\n                state.activeFilters.push(action.payload)\r\n            }\r\n            \r\n        }\r\n    }\r\n})\r\n\r\nconst closeItemPicker = itemPicker.actions.closeItemPicker;\r\nconst openItemPicker = itemPicker.actions.openItemPicker;\r\n\r\nexport {closeItemPicker, openItemPicker};\r\n\r\nexport default itemPicker;"]},"metadata":{},"sourceType":"module"}