{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erica\\\\Documents\\\\repos\\\\JavaScript\\\\smite-timeline\\\\src\\\\components\\\\TimelineSlider\\\\SliderEventGroup.tsx\";\nimport React from \"react\";\nimport ItemSlot from \"../ItemBuild/ItemSlot/ItemSlot\";\nimport \"./SliderEventGroup.css\";\nimport buildIdentifier from \"../../redux/buildIdentifier\";\n\nconst Spacer = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"level-spacer\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 22\n  }\n});\n\nconst orderEventsByType = (events, side) => {\n  let ordered = [];\n\n  if (events.filter(event => event.type === 'level' && event.slot.buildID === side).length === 0) {\n    ordered.push( /*#__PURE__*/React.createElement(Spacer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 22\n      }\n    }));\n  } else {\n    let levelEvents = events.filter(event => event.slot.buildID === side && event.type === 'level').map(event => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"level-event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 43\n      }\n    }, event.level));\n    ordered.push(...levelEvents);\n  }\n\n  let itemEvents = events.filter(event => event.slot.buildID === side && event.type === 'item finished').map(event => /*#__PURE__*/React.createElement(ItemSlot, {\n    key: event.slot.index,\n    item: event.item,\n    slot: event.slot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 43\n    }\n  }));\n  ordered.push(...itemEvents);\n  return ordered;\n};\n\nconst SliderEventGroup = ({\n  events\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'event-group',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left event-group-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, orderEventsByType(events, buildIdentifier.left)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right event-group-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, orderEventsByType(events, buildIdentifier.right)));\n};\n\nexport default SliderEventGroup;","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/TimelineSlider/SliderEventGroup.tsx"],"names":["React","ItemSlot","buildIdentifier","Spacer","orderEventsByType","events","side","ordered","filter","event","type","slot","buildID","length","push","levelEvents","map","level","itemEvents","index","item","SliderEventGroup","left","right"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,wBAAP;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAKA,MAAMC,MAAM,GAAG,mBAAM;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAArB;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,MAAD,EAAuBC,IAAvB,KAAkD;AACxE,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAIF,MAAM,CAACG,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACE,IAAN,CAAWC,OAAX,KAAuBN,IAAxE,EAA8EO,MAA9E,KAAyF,CAA7F,EAAiG;AAC7FN,IAAAA,OAAO,CAACO,IAAR,eAAa,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACH,GAFD,MAEO;AACH,QAAIC,WAAW,GAAGV,MAAM,CAACG,MAAP,CAAeC,KAAD,IAAgCA,KAAK,CAACE,IAAN,CAAWC,OAAX,KAAuBN,IAAvB,IAA+BG,KAAK,CAACC,IAAN,KAAe,OAA5F,EACGM,GADH,CACOP,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BA,KAAK,CAACQ,KAApC,CADhB,CAAlB;AAEAV,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAGC,WAAhB;AACH;;AACD,MAAIG,UAAU,GAAGb,MAAM,CAACG,MAAP,CAAeC,KAAD,IAA+BA,KAAK,CAACE,IAAN,CAAWC,OAAX,KAAuBN,IAAvB,IAA+BG,KAAK,CAACC,IAAN,KAAe,eAA3F,EACQM,GADR,CACYP,KAAK,iBAAI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAK,CAACE,IAAN,CAAWQ,KAA1B;AAAiC,IAAA,IAAI,EAAEV,KAAK,CAACW,IAA7C;AAAmD,IAAA,IAAI,EAAEX,KAAK,CAACE,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrB,CAAjB;AAEAJ,EAAAA,OAAO,CAACO,IAAR,CAAa,GAAGI,UAAhB;AACA,SAAOX,OAAP;AACH,CAbD;;AAgBA,MAAMc,gBAAgB,GAAG,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAsB;AAC3C,sBAAQ;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,iBAAiB,CAACC,MAAD,EAASH,eAAe,CAACoB,IAAzB,CADtB,CADI,eAIJ;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,iBAAiB,CAACC,MAAD,EAASH,eAAe,CAACqB,KAAzB,CADtB,CAJI,CAAR;AAQH,CATD;;AAWA,eAAeF,gBAAf","sourcesContent":["import { BuildEvent, ItemEvent, LevelEvent } from \"../../redux/selectors/StatsSelector\";\r\nimport React from \"react\";\r\nimport ItemSlot from \"../ItemBuild/ItemSlot/ItemSlot\";\r\nimport \"./SliderEventGroup.css\";\r\nimport buildIdentifier from \"../../redux/buildIdentifier\";\r\n\r\ntype Props = {\r\n    events: BuildEvent[]\r\n}\r\nconst Spacer = () => <div className='level-spacer'></div>\r\n\r\nconst orderEventsByType = (events: BuildEvent[], side: buildIdentifier)  => {\r\n    let ordered = [];\r\n    if (events.filter(event => event.type === 'level' && event.slot.buildID === side).length === 0)  {\r\n        ordered.push(<Spacer></Spacer>);\r\n    } else {\r\n        let levelEvents = events.filter((event): event is LevelEvent => event.slot.buildID === side && event.type === 'level')\r\n                            .map(event => <div className='level-event'>{event.level}</div>)\r\n        ordered.push(...levelEvents);\r\n    }\r\n    let itemEvents = events.filter((event): event is ItemEvent => event.slot.buildID === side && event.type === 'item finished')\r\n                            .map(event => <ItemSlot key={event.slot.index} item={event.item} slot={event.slot}></ItemSlot>)\r\n    ordered.push(...itemEvents);\r\n    return ordered;\r\n}\r\n\r\n\r\nconst SliderEventGroup = ({ events}: Props) => {\r\n    return (<div className={'event-group'}>\r\n        <div className='left event-group-side'>\r\n            {orderEventsByType(events, buildIdentifier.left)}\r\n        </div>\r\n        <div className='right event-group-side'>\r\n            {orderEventsByType(events, buildIdentifier.right)}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default SliderEventGroup;"]},"metadata":{},"sourceType":"module"}