{"ast":null,"code":"import React from'react';import'./GodStats.css';import{connect}from'react-redux';import makeStatsSelector from'../../redux/selectors/StatsSelector';import GodSelector from'./GodSelector';var GodStats=function GodStats(_ref){var buildIdentifier=_ref.buildIdentifier;return/*#__PURE__*/React.createElement(\"div\",{className:\"GodStats border-gradient\"},/*#__PURE__*/React.createElement(\"div\",{className:\" major-container\"},/*#__PURE__*/React.createElement(GodSelector,{buildIdentifier:buildIdentifier}),/*#__PURE__*/React.createElement(StatTable,{buildIdentifier:buildIdentifier})));};export default GodStats;var statsSelector=null;var StatTable=function StatTable(_ref2){var buildIdentifier=_ref2.buildIdentifier;var selector=statsSelector!==null&&statsSelector!==void 0?statsSelector:makeStatsSelector(buildIdentifier);var displayStat=function displayStat(name){var mapStateToProps=function mapStateToProps(state){var build=state[buildIdentifier];var events=selector(build);events=events.filter(function(event){return event.time<=state.time;});var stats=events[events.length-1].stats;//the last event whose time is <= current time\nvar val=stats[name];if(typeof val=='number'){return{name:name,val:val};}};var ConnectedStatItem=connect(mapStateToProps)(StatItem);return/*#__PURE__*/React.createElement(ConnectedStatItem,null);};return/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,displayStat('health'),displayStat('mana'),displayStat('hp5'),displayStat('mp5'),displayStat('power'),displayStat('criticalStrikeChance'),displayStat('flatPenetration'),displayStat('percentPenetration'),displayStat('attackSpeed'),displayStat('physicalProtection'),displayStat('magicalProtection'),displayStat('movementSpeed'),displayStat('cooldownReduction'),displayStat('crowdControlReduction')));};var StatItem=function StatItem(props){return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"stat-name\"},props.name,\":\"),/*#__PURE__*/React.createElement(\"td\",{className:\"stat-value\"},props.val.toFixed(0)));};","map":{"version":3,"sources":["C:/Users/erica/Documents/repos/JavaScript/smite-timeline/src/components/GodStats/GodStats.tsx"],"names":["React","connect","makeStatsSelector","GodSelector","GodStats","buildIdentifier","statsSelector","StatTable","selector","displayStat","name","mapStateToProps","state","build","events","filter","event","time","stats","length","val","ConnectedStatItem","StatItem","props","toFixed"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,gBAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAaA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAgC,IAA9BC,CAAAA,eAA8B,MAA9BA,eAA8B,CAC7C,mBACI,2BAAK,SAAS,CAAC,0BAAf,eACI,2BAAK,SAAS,CAAC,kBAAf,eACI,oBAAC,WAAD,EAAa,eAAe,CAAEA,eAA9B,EADJ,cAEI,oBAAC,SAAD,EAAW,eAAe,CAAEA,eAA5B,EAFJ,CADJ,CADJ,CAQH,CATD,CAWA,cAAeD,CAAAA,QAAf,CAEA,GAAIE,CAAAA,aAA0D,CAAG,IAAjE,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,OAAgC,IAA9BF,CAAAA,eAA8B,OAA9BA,eAA8B,CAC9C,GAAMG,CAAAA,QAAQ,CAAGF,aAAH,SAAGA,aAAH,UAAGA,aAAH,CAAoBJ,iBAAiB,CAACG,eAAD,CAAnD,CACA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAA2B,CAC3C,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAsB,CAC1C,GAAIC,CAAAA,KAAY,CAAGD,KAAK,CAACP,eAAD,CAAxB,CACA,GAAIS,CAAAA,MAAM,CAAGN,QAAQ,CAACK,KAAD,CAArB,CACAC,MAAM,CAAGA,MAAM,CAACC,MAAP,CAAc,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,EAAcL,KAAK,CAACK,IAAxB,EAAnB,CAAT,CACA,GAAIC,CAAAA,KAAK,CAAGJ,MAAM,CAACA,MAAM,CAACK,MAAP,CAAgB,CAAjB,CAAN,CAA0BD,KAAtC,CAA6C;AAC7C,GAAIE,CAAAA,GAAG,CAAGF,KAAK,CAACR,IAAD,CAAf,CACA,GAAI,MAAOU,CAAAA,GAAP,EAAc,QAAlB,CAA4B,CACxB,MAAO,CACHV,IAAI,CAAEA,IADH,CAEHU,GAAG,CAAEA,GAFF,CAAP,CAIH,CACJ,CAZD,CAcA,GAAMC,CAAAA,iBAAiB,CAAGpB,OAAO,CAACU,eAAD,CAAP,CAAyBW,QAAzB,CAA1B,CACA,mBACI,oBAAC,iBAAD,MADJ,CAGH,CAnBD,CAqBA,mBACI,8CAAO,iCACEb,WAAW,CAAC,QAAD,CADb,CAEEA,WAAW,CAAC,MAAD,CAFb,CAGEA,WAAW,CAAC,KAAD,CAHb,CAIEA,WAAW,CAAC,KAAD,CAJb,CAKEA,WAAW,CAAC,OAAD,CALb,CAMEA,WAAW,CAAC,sBAAD,CANb,CAOEA,WAAW,CAAC,iBAAD,CAPb,CAQEA,WAAW,CAAC,oBAAD,CARb,CASEA,WAAW,CAAC,aAAD,CATb,CAUEA,WAAW,CAAC,oBAAD,CAVb,CAWEA,WAAW,CAAC,mBAAD,CAXb,CAYEA,WAAW,CAAC,eAAD,CAZb,CAaEA,WAAW,CAAC,mBAAD,CAbb,CAcEA,WAAW,CAAC,uBAAD,CAdb,CAAP,CADJ,CAkBH,CAzCD,CA2CA,GAAMa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAwB,CACrC,mBACI,2CACI,0BAAI,SAAS,CAAC,WAAd,EACKA,KAAK,CAACb,IADX,KADJ,cAII,0BAAI,SAAS,CAAC,YAAd,EACGa,KAAK,CAACH,GAAN,CAAUI,OAAV,CAAkB,CAAlB,CADH,CAJJ,CADJ,CAUH,CAXD","sourcesContent":["import React from 'react';\r\nimport './GodStats.css';\r\nimport { connect } from 'react-redux';\r\nimport makeStatsSelector from '../../redux/selectors/StatsSelector';\r\nimport Build from '../../data_objects/Build';\r\nimport GodSelector from './GodSelector';\r\nimport { RootState } from '../../redux/store';\r\nimport buildIdentifier from \"../../redux/buildIdentifier\";\r\nimport { StatBlock } from '@smite-timeline/smite-game-objects';\r\n\r\ntype BuildID = {\r\n    buildIdentifier: buildIdentifier\r\n}\r\ntype NameValPair = {\r\n    name: keyof StatBlock,\r\n    val: number\r\n}\r\n\r\nconst GodStats = ({buildIdentifier}: BuildID) => {\r\n    return(\r\n        <div className='GodStats border-gradient'>\r\n            <div className=\" major-container\">\r\n                <GodSelector buildIdentifier={buildIdentifier}></GodSelector>\r\n                <StatTable buildIdentifier={buildIdentifier}></StatTable>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GodStats;\r\n\r\nvar statsSelector: ReturnType<typeof makeStatsSelector> | null = null;\r\nconst StatTable = ({buildIdentifier}: BuildID) => {\r\n    const selector = statsSelector ?? makeStatsSelector(buildIdentifier)\r\n    const displayStat = (name: keyof StatBlock) => {\r\n        const mapStateToProps = (state: RootState) => {\r\n            let build: Build = state[buildIdentifier];\r\n            let events = selector(build);\r\n            events = events.filter(event => event.time <= state.time);\r\n            let stats = events[events.length - 1].stats; //the last event whose time is <= current time\r\n            let val = stats[name]\r\n            if (typeof val == 'number') {\r\n                return {\r\n                    name: name,\r\n                    val: val\r\n                }\r\n            }\r\n        }\r\n        \r\n        const ConnectedStatItem = connect(mapStateToProps)(StatItem);\r\n        return (\r\n            <ConnectedStatItem></ConnectedStatItem>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <table><tbody>\r\n                {displayStat('health')}\r\n                {displayStat('mana')}\r\n                {displayStat('hp5')}\r\n                {displayStat('mp5')}\r\n                {displayStat('power')}\r\n                {displayStat('criticalStrikeChance')}\r\n                {displayStat('flatPenetration')}\r\n                {displayStat('percentPenetration')}\r\n                {displayStat('attackSpeed')}\r\n                {displayStat('physicalProtection')}\r\n                {displayStat('magicalProtection')}\r\n                {displayStat('movementSpeed')}\r\n                {displayStat('cooldownReduction')}\r\n                {displayStat('crowdControlReduction')}\r\n        </tbody></table>\r\n    );\r\n}\r\n\r\nconst StatItem = (props: NameValPair) => {\r\n    return(\r\n        <tr>\r\n            <td className='stat-name'>\r\n                {props.name}:\r\n            </td>\r\n            <td className='stat-value'>\r\n              {props.val.toFixed(0)}  \r\n            </td>\r\n        </tr>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}